{"metadata":{"navigatorTitle":[{"text":"stop","kind":"identifier"}],"role":"symbol","externalID":"c:@M@NixUniversalSDK@objc(pl)IDeviceScanner(im)stop","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"stop","kind":"identifier"},{"text":"()","kind":"text"}],"roleHeading":"Instance Method","required":true,"title":"stop()","symbolKind":"method","modules":[{"name":"NixUniversalSDK"}]},"sections":[],"schemaVersion":{"patch":0,"major":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/idevicescanner\/stop()"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/idevicescanner\/stop()"]}],"abstract":[{"text":"Stops a Bluetooth search if one is currently running.","type":"text"}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":"(stop) ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"text":"()","kind":"text"}],"platforms":["macOS"]}]}],"kind":"symbol","identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()","interfaceLanguage":"swift"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"text":"A library to allow integration of Nix devices into third-party iOS and macOS applications.","type":"text"}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","abstract":[{"text":"Protocol implemented by the ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference"}],"title":"IDeviceScanner","kind":"symbol","type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"IDeviceScanner","kind":"identifier"}],"navigatorTitle":[{"text":"IDeviceScanner","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicescanner","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner":{"title":"DeviceScanner","navigatorTitle":[{"kind":"identifier","text":"DeviceScanner"}],"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeviceScanner"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/devicescanner","role":"symbol","abstract":[{"text":"Class used to discover nearby Nix devices","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/stop()":{"abstract":[{"text":"Stops a Bluetooth search if one is currently running.","type":"text"}],"required":true,"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()","navigatorTitle":[{"kind":"identifier","text":"stop"}],"type":"topic","role":"symbol","title":"stop()","url":"\/documentation\/nixuniversalsdk\/idevicescanner\/stop()","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}]}},"variantOverrides":[{"patch":[{"op":"replace","value":"occ","path":"\/identifier\/interfaceLanguage"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Instance Method"},{"op":"replace","path":"\/metadata\/title","value":"stop"},{"op":"replace","path":"\/metadata\/symbolKind","value":"method"},{"path":"\/metadata\/fragments","value":[{"kind":"text","text":"- "},{"text":"stop","kind":"identifier"}],"op":"replace"},{"value":null,"path":"\/topicSections","op":"add"},{"path":"\/relationshipsSections","value":null,"op":"add"},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"languages":["occ"],"platforms":["macOS"],"tokens":[{"text":"- (","kind":"text"},{"kind":"typeIdentifier","text":"void","preciseIdentifier":"c:v"},{"text":") ","kind":"text"},{"text":"stop","kind":"identifier"},{"kind":"text","text":";"}]}],"kind":"declarations"},"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/title","value":"IDeviceScanner"},{"value":[{"text":"IDeviceScanner","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/fragments"},{"value":[{"kind":"identifier","text":"IDeviceScanner"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/navigatorTitle","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/title","value":"DeviceScanner"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/fragments","value":[{"text":"DeviceScanner","kind":"identifier"}]},{"value":[{"text":"DeviceScanner","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/title","value":"stop","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"text":"stop","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}