{"metadata":{"roleHeading":"Type Method","role":"symbol","symbolKind":"method","title":"fromInt(_:)","modules":[{"name":"NixUniversalSDK"}],"externalID":"s:15NixUniversalSDK14ReferenceWhiteO7fromIntyACSiFZ","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromInt"},{"text":"(","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":") -> "},{"text":"ReferenceWhite","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@ReferenceWhite"}]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"fromInt"},{"text":"(","kind":"text"},{"text":"_","kind":"externalParam"},{"text":" ","kind":"text"},{"text":"int","kind":"internalParam"},{"kind":"text","text":": "},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@ReferenceWhite","text":"ReferenceWhite"}],"platforms":["macOS"],"languages":["swift"]}]}],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/referencewhite\/fromint(_:)"],"traits":[{"interfaceLanguage":"swift"}]}],"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"abstract":[{"text":"Helper to provide the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite","isActive":true},{"type":"text","text":" enum for a particular reference ID. If an invalid ID is provided, "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite\/EMPTY"},{"text":" is returned.","type":"text"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite\/fromInt(_:)"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ReferenceWhite":{"url":"\/documentation\/nixuniversalsdk\/referencewhite","role":"symbol","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"ReferenceWhite"}],"abstract":[{"type":"text","text":"Enum to describe valid options for reference white IDs"}],"type":"topic","title":"ReferenceWhite","kind":"symbol","navigatorTitle":[{"text":"ReferenceWhite","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ReferenceWhite/EMPTY":{"title":"ReferenceWhite.EMPTY","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite\/EMPTY","navigatorTitle":[{"text":"ReferenceWhiteEMPTY","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"EMPTY","kind":"identifier"}],"abstract":[{"text":"Unknown \/ other reference white point","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/referencewhite\/empty","role":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ReferenceWhite/fromInt(_:)":{"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"fromInt","kind":"identifier"},{"kind":"text","text":"("},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":") -> ","kind":"text"},{"text":"ReferenceWhite","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@ReferenceWhite"}],"url":"\/documentation\/nixuniversalsdk\/referencewhite\/fromint(_:)","abstract":[{"text":"Helper to provide the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite"},{"text":" enum for a particular reference ID. If an invalid ID is provided, ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite\/EMPTY"},{"type":"text","text":" is returned."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ReferenceWhite\/fromInt(_:)","title":"fromInt(_:)","role":"symbol","kind":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"ReferenceWhite","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/fragments","op":"replace","value":[{"kind":"identifier","text":"ReferenceWhite"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite\/navigatorTitle","value":[{"kind":"identifier","text":"ReferenceWhite"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite~1EMPTY\/title","value":"ReferenceWhiteEMPTY"},{"value":[{"text":"ReferenceWhiteEMPTY","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ReferenceWhite~1EMPTY\/fragments"}]}]}