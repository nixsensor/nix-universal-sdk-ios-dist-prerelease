{"relationshipsSections":[{"kind":"relationships","type":"conformsTo","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"],"title":"Conforms To"}],"kind":"symbol","sections":[],"variants":[{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"swift"}]},{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"occ"}]}],"topicSections":[{"generated":true,"anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"title":"Enumeration Cases"},{"title":"Initializers","anchor":"Initializers","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"],"generated":true},{"title":"Instance Properties","generated":true,"anchor":"Instance-Properties","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"]},{"anchor":"Default-Implementations","title":"Default Implementations","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"],"generated":true}],"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","interfaceLanguage":"swift"},"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CommandStatus","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"metadata":{"title":"CommandStatus","modules":[{"name":"NixUniversalSDK"}],"roleHeading":"Enumeration","externalID":"c:@M@NixUniversalSDK@E@CommandStatus","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"text":"CommandStatus","kind":"identifier"}],"symbolKind":"enum","navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"role":"symbol"},"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","isActive":true,"type":"reference"},{"text":".","type":"text"}],"references":{"doc://com.nixsensor.universalsdk/SY":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SY","title":"Swift.RawRepresentable","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}],"title":"name","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"String representation of this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"title":"CommandStatus.ERROR_NOT_READY","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command)."}],"navigatorTitle":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"ERROR_NOT_READY","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance."}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}],"role":"symbol","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","title":"CommandStatus.ERROR_NOT_SUPPORTED"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","role":"collectionGroup","kind":"article","abstract":[],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState","text":"LicenseManagerState","kind":"typeIdentifier"}],"title":"state","role":"symbol","navigatorTitle":[{"text":"state","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Describes the current state of the  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager"},{"type":"text","text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE"},{"type":"text","text":")"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"text":".","type":"text"}],"type":"topic","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus","title":"CommandStatus","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","role":"symbol","navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeviceResultCallback","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true},{"type":"text","text":" instance."}],"kind":"symbol","title":"DeviceResultCallback","type":"topic","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","navigatorTitle":[{"text":"DeviceResultCallback","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"abstract":[],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","title":"init(rawValue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"kind":"text","text":")"}],"kind":"symbol","role":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/SH":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.nixsensor.universalsdk/SQ":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_LICENSE","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","title":"CommandStatus.ERROR_LICENSE","kind":"symbol","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a problem with the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager"},{"type":"text","text":". Check "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true},{"type":"text","text":" for details."}],"type":"topic","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"navigatorTitle":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","kind":"symbol","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","title":"CommandStatus.ERROR_LOW_POWER","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_LOW_POWER","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement).","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"title":"CommandStatus.SUCCESS","abstract":[{"text":"Status code indicating that the command completed successfully.","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","kind":"symbol","type":"topic","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"SUCCESS","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_INTERNAL","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command failed due to an unknown \/ internal SDK error."}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","title":"CommandStatus.ERROR_INTERNAL","type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_AMBIENT_LIGHT"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_AMBIENT_LIGHT"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","role":"symbol","abstract":[{"text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage.","type":"text"}],"kind":"symbol","title":"CommandStatus.ERROR_AMBIENT_LIGHT","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_TIMEOUT"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","navigatorTitle":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command failed due to a timeout error."}],"title":"CommandStatus.ERROR_TIMEOUT","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE","navigatorTitle":[{"kind":"identifier","text":"CommandStatusWARNING_TEMPERATURE"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true,"type":"reference"},{"text":" command.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WARNING_TEMPERATURE","kind":"identifier"}],"title":"CommandStatus.WARNING_TEMPERATURE","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LicenseManager"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"LicenseManager","kind":"identifier"}],"title":"LicenseManager","role":"symbol","url":"\/documentation\/nixuniversalsdk\/licensemanager"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","title":"CommandStatus.ERROR_INVALID_ARGUMENT","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because it contained invalid arguments."}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IDeviceCompat","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","navigatorTitle":[{"text":"IDeviceCompat","kind":"identifier"}],"type":"topic","title":"IDeviceCompat","url":"\/documentation\/nixuniversalsdk\/idevicecompat","role":"symbol","abstract":[{"text":"Protocol describing the supported properties and methods for a Nix device. ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"type":"text","text":" objects are found nearby using the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"runFieldCalibration"},{"kind":"text","text":"("},{"kind":"externalParam","text":"tileString"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier"},{"kind":"text","text":")"}],"navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"required":true,"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","abstract":[{"type":"text","text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately."},{"text":" ","type":"text"},{"type":"text","text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code."}],"title":"runFieldCalibration(tileString:completion:)","type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"role":"collectionGroup","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations","url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations","abstract":[],"title":"RawRepresentable Implementations","type":"topic","kind":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","kind":"symbol","title":"CommandStatus.ERROR_SCAN_DELTA","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_SCAN_DELTA","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","type":"reference","isActive":true},{"type":"text","text":" command."}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"role":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Enumeration"},{"value":"CommandStatus","op":"replace","path":"\/metadata\/title"},{"value":"enum","op":"replace","path":"\/metadata\/symbolKind"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace","path":"\/metadata\/fragments"},{"value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace","path":"\/metadata\/navigatorTitle"},{"op":"replace","path":"\/topicSections","value":[{"generated":true,"anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"title":"Enumeration Cases"}]},{"path":"\/relationshipsSections","op":"replace","value":null},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSInteger","text":"NSInteger"},{"text":";","kind":"text"}],"platforms":["macOS"],"languages":["occ"]}]}},{"op":"replace","value":"CommandStatusERROR_NOT_READY","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}]},{"value":"CommandStatusERROR_NOT_SUPPORTED","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title","op":"replace"},{"op":"replace","value":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","op":"replace","value":"state"},{"op":"replace","value":[{"kind":"identifier","text":"state"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","value":"CommandStatus","op":"replace"},{"op":"replace","value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","value":[{"text":"CommandStatus","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","value":"CommandStatusERROR_LICENSE"},{"value":[{"text":"CommandStatusERROR_LICENSE","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title","value":"CommandStatusERROR_LOW_POWER"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments","value":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title","op":"replace","value":"CommandStatusSUCCESS"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments","value":[{"text":"CommandStatusSUCCESS","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title","op":"replace","value":"CommandStatusERROR_INTERNAL"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","value":"CommandStatusERROR_AMBIENT_LIGHT","op":"replace"},{"value":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments","op":"replace"},{"value":"CommandStatusERROR_TIMEOUT","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_TIMEOUT"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title","op":"replace","value":"CommandStatusWARNING_TEMPERATURE"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments","value":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","value":"LicenseManager","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments","value":[{"kind":"identifier","text":"LicenseManager"}]},{"value":[{"text":"LicenseManager","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle"},{"value":"CommandStatusERROR_INVALID_ARGUMENT","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","op":"replace"},{"value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","value":"IDeviceCompat"},{"value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","value":[{"kind":"identifier","text":"IDeviceCompat"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","value":"runFieldCalibration:completion:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"runFieldCalibration:completion:","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title","op":"replace","value":"CommandStatusERROR_SCAN_DELTA"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}]}]}]}