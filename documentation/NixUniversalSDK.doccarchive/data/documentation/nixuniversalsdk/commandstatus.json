{"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","isActive":true,"type":"reference"},{"type":"text","text":"."}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"],"kind":"relationships"}],"schemaVersion":{"minor":3,"patch":0,"major":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]},{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}],"title":"CommandStatus","externalID":"c:@M@NixUniversalSDK@E@CommandStatus","modules":[{"name":"NixUniversalSDK"}],"fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"roleHeading":"Enumeration","symbolKind":"enum","role":"symbol"},"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"languages":["swift"],"tokens":[{"kind":"attribute","text":"@objc"},{"text":" ","kind":"text"},{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}]}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"anchor":"Enumeration-Cases","title":"Enumeration Cases","generated":true},{"generated":true,"anchor":"Initializers","title":"Initializers","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"]},{"generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"],"title":"Instance Properties","anchor":"Instance-Properties"},{"anchor":"Default-Implementations","generated":true,"title":"Default Implementations","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"]}],"references":{"doc://com.nixsensor.universalsdk/SY":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"kind":"article","url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","role":"collectionGroup","title":"Equatable Implementations","abstract":[]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat","title":"IDeviceCompat","navigatorTitle":[{"kind":"identifier","text":"IDeviceCompat"}],"abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"reference","isActive":true},{"type":"text","text":" objects are found nearby using the "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDeviceCompat"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)","title":"init(rawValue:)","abstract":[],"role":"symbol","fragments":[{"kind":"identifier","text":"init"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"},{"text":")","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"abstract":[{"text":"A library to allow integration of Nix devices into third-party iOS and macOS applications.","type":"text"}],"type":"topic","role":"collection","title":"NixUniversalSDK","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"kind":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","role":"symbol","title":"name","abstract":[{"text":"String representation of this ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","type":"reference","isActive":true}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceResultCallback"}],"title":"DeviceResultCallback","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"reference","isActive":true},{"type":"text","text":" instance."}],"kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","title":"CommandStatus.ERROR_INTERNAL","abstract":[{"type":"text","text":"Status code indicating that the command failed due to an unknown \/ internal SDK error."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INTERNAL"}],"navigatorTitle":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","kind":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_READY","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","role":"symbol","title":"CommandStatus.ERROR_NOT_READY","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command)."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"type":"topic","title":"CommandStatus.ERROR_TIMEOUT","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a timeout error."}],"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_TIMEOUT"}],"navigatorTitle":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_SCAN_DELTA","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","role":"symbol","title":"CommandStatus.ERROR_SCAN_DELTA","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true,"type":"reference"},{"type":"text","text":" command."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"type":"topic","title":"RawRepresentable Implementations","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations","kind":"article","url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_LOW_POWER","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","role":"symbol","title":"CommandStatus.ERROR_LOW_POWER","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement)."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"title":"LicenseManager","url":"\/documentation\/nixuniversalsdk\/licensemanager","abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LicenseManager"}],"navigatorTitle":[{"text":"LicenseManager","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"title":"runFieldCalibration(tileString:completion:)","role":"symbol","navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","type":"topic","kind":"symbol","required":true,"abstract":[{"type":"text","text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately."},{"text":" ","type":"text"},{"text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code.","type":"text"}],"fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"runFieldCalibration","kind":"identifier"},{"kind":"text","text":"("},{"text":"tileString","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceResultCallback","kind":"typeIdentifier","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka"},{"kind":"text","text":")"}]},"doc://com.nixsensor.universalsdk/SH":{"type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","title":"Swift.Hashable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"role":"symbol","type":"topic","abstract":[{"text":"Describes the current state of the  ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"type":"text","text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","isActive":true},{"text":")","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LicenseManagerState","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","kind":"symbol","navigatorTitle":[{"text":"state","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","title":"state"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_LICENSE"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","role":"symbol","title":"CommandStatus.ERROR_LICENSE","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a problem with the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","type":"reference","isActive":true},{"type":"text","text":". Check "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true,"type":"reference"},{"type":"text","text":" for details."}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"type":"topic","abstract":[{"type":"text","text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage."}],"title":"CommandStatus.ERROR_AMBIENT_LIGHT","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_AMBIENT_LIGHT","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","title":"CommandStatus.ERROR_INVALID_ARGUMENT","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"title":"CommandStatus.WARNING_TEMPERATURE","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusWARNING_TEMPERATURE"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE","type":"topic","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WARNING_TEMPERATURE","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true},{"text":" command.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"title":"CommandStatus","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","title":"CommandStatus.SUCCESS","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"SUCCESS","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command completed successfully.","type":"text"}],"navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"type":"topic","title":"CommandStatus.ERROR_NOT_SUPPORTED","abstract":[{"text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance.","type":"text"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_NOT_SUPPORTED"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","role":"symbol"},"doc://com.nixsensor.universalsdk/SQ":{"type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","title":"Swift.Equatable"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"value":"Enumeration","op":"replace","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","op":"replace","value":"CommandStatus"},{"path":"\/metadata\/symbolKind","op":"replace","value":"enum"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}]},{"value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/metadata\/navigatorTitle","op":"replace"},{"path":"\/topicSections","op":"replace","value":[{"generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"title":"Enumeration Cases","anchor":"Enumeration-Cases"}]},{"op":"replace","path":"\/relationshipsSections","value":null},{"op":"add","path":"\/seeAlsoSections","value":null},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"platforms":["macOS"],"languages":["occ"],"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"NSInteger","preciseIdentifier":"c:@T@NSInteger"},{"kind":"text","text":";"}]}],"kind":"declarations"},"op":"replace"},{"op":"replace","value":"IDeviceCompat","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title"},{"value":[{"kind":"identifier","text":"IDeviceCompat"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","op":"replace"},{"value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle"},{"value":"CommandStatusERROR_INTERNAL","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments","value":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title","value":"CommandStatusERROR_NOT_READY"},{"value":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title","value":"CommandStatusERROR_TIMEOUT","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments","value":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"CommandStatusERROR_SCAN_DELTA","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title","value":"CommandStatusERROR_LOW_POWER"},{"op":"replace","value":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments"},{"value":"LicenseManager","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace"},{"value":[{"text":"LicenseManager","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments"},{"op":"replace","value":[{"text":"LicenseManager","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","op":"replace","value":"runFieldCalibration:completion:"},{"value":[{"kind":"text","text":"- "},{"text":"runFieldCalibration:completion:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","op":"replace","value":"state"},{"op":"replace","value":[{"text":"state","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments"},{"value":"CommandStatusERROR_LICENSE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","op":"replace","value":"CommandStatusERROR_AMBIENT_LIGHT"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_AMBIENT_LIGHT"}],"op":"replace"},{"value":"CommandStatusERROR_INVALID_ARGUMENT","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments"},{"value":"CommandStatusWARNING_TEMPERATURE","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title"},{"value":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments"},{"value":"CommandStatus","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title"},{"op":"replace","value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments"},{"value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","op":"replace"},{"op":"replace","value":"CommandStatusSUCCESS","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title"},{"value":[{"text":"CommandStatusSUCCESS","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments"},{"value":"CommandStatusERROR_NOT_SUPPORTED","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments"}]}]}