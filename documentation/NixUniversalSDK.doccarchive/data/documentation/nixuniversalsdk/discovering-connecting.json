{"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"seeAlsoSections":[{"anchor":"Getting-Started","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"],"title":"Getting Started","generated":true}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/discovering-connecting"},"abstract":[{"text":"Use the device scanner to discover Nix devices and open a connection","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/discovering-connecting"]},{"paths":["\/documentation\/nixuniversalsdk\/discovering-connecting"],"traits":[{"interfaceLanguage":"occ"}]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"primaryContentSections":[{"kind":"content","content":[{"text":"Overview","anchor":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"type":"text","text":"Regardless of device type, each unique Nix device can be represented by an object that conforms to the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" protocol. To obtain instances of the device object, they need to first be discovered using the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true,"type":"reference"},{"type":"text","text":". They can also be recalled at a later time directly using their "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","isActive":true,"type":"reference"},{"type":"text","text":" property (for Bluetooth connected devices only)."}]},{"anchor":"Device-Discovery","type":"heading","text":"Device Discovery","level":3},{"inlineContent":[{"text":"The ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"type":"text","text":" implements the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","isActive":true,"type":"reference"},{"type":"text","text":" protocol and searches for nearby Nix devices using Bluetooth. On macOS, the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true,"type":"reference"},{"text":" will also report devices connected via USB. Scanner events are reported via:","type":"text"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate","type":"reference","isActive":true},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Delegate which must be specified when initializing the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Reports when the scanner initializes, starts, and stops searching for devices"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback","isActive":true,"type":"reference"},{"type":"text","text":":"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Closure which is called by the scanner each time that an ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"text":" instance has been found","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Note that this will be called both when a new device is found and when the RSSI\/signal strength of a previously discovered device has changed."}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"It is possible to use the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","isActive":true},{"text":" parameter as a means to uniquely identify discovered devices.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not hold reference to stale "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"text":" instances; use the most recently reported device instance when connecting to a device later.","type":"text"}]}]}]}]}]}]}],"type":"unorderedList"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Devices can only be discovered or recalled while your SDK licence is in an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","isActive":true,"type":"reference"},{"text":" state; the current value is available via ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","type":"reference","isActive":true},{"type":"text","text":". Only device types supported by your license can be discovered and connected; the current list of allowed types is available via "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/allowedDeviceTypes-4f98s"},{"text":".","type":"text"}]}],"name":"Note","type":"aside","style":"note"},{"inlineContent":[{"type":"text","text":"To use the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true,"type":"reference"},{"type":"text","text":":"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"text":"Initialize the scanner and check its state in ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerInit(_:state:)","isActive":true,"type":"reference"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"After a successful initialization, the state will be "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/IDLE","isActive":true,"type":"reference"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If the state is ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/ERROR_LICENSE","isActive":true},{"text":", check ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state"},{"type":"text","text":" for further details."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"If the scanner has initialized successfully, the scanner can be started using ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)"}]},{"items":[{"content":[{"inlineContent":[{"text":"By default, the scanner will search for a period ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS","isActive":true},{"type":"text","text":", but this interval can be overridden by providing an argument for "},{"code":"scanPeriodMs","type":"codeVoice"},{"type":"text","text":"."}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Discovered devices will be reported via a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback","isActive":true,"type":"reference"},{"text":" closure. At this stage, it is valid to check a limited number of parameters:","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","type":"reference","isActive":true},{"text":": Device identifier string","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rssi","type":"reference"},{"type":"text","text":": Device signal strength (-127 to 0). Will be 0 for USB connected devices"}]}]},{"content":[{"inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/interfaceType"},{"text":": Indicates whether the device was found via Bluetooth or USB connection","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/type","type":"reference","isActive":true},{"type":"text","text":": Indicates the specific device type"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/name","type":"reference"},{"text":": Full name of the device (e.g. ‘Nix Spectro 2’)","type":"text"}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The device search will run for the specified duration, after which "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerStopped(_:)","isActive":true},{"type":"text","text":" is called. The device search can also be manually stopped using "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()","isActive":true},{"type":"text","text":"."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"To recall a specific Bluetooth connected device in a later app session, you can use ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)","isActive":true},{"type":"text","text":". This will run the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true,"type":"reference"},{"type":"text","text":" searching for a specific device by its identifier, calling back only once when the device is first found."}]}]}]},{"level":4,"text":"Swift example","anchor":"Swift-example","type":"heading"},{"type":"codeListing","syntax":"swift","code":["import UIKit","import NixUniversalSDK","","class MyViewController: UIViewController, ScannerStateDelegate {","    var scanner: IDeviceScanner? = nil","","    override func viewDidLoad() {","        super.viewDidLoad()","        ","        \/\/ Initialize DeviceScanner","        scanner = DeviceScanner(delegate: self)","    }","","    \/\/ MARK: ScannerStateDelegate","    func onScannerInit(","        _ sender: NixUniversalSDK.IDeviceScanner, ","        state: DeviceScannerState","    ) {        ","        switch state {","        case .IDLE:","            \/\/ Successful initialization ... can start a search now","            break","        case .ERROR_BLUETOOTH_PERMISSIONS:","            \/\/ User has denied access to Bluetooth","            \/\/ Handle error ...","            break","        case .ERROR_BLUETOOTH_DISABLED, .ERROR_BLUETOOTH_UNAVAILABLE:","            \/\/ Bluetooth is disabled or not available","            \/\/ Handle error...        ","            break","        default:","            \/\/ Other error ...","            break","        }","    }","","    func onScannerStarted(","        _ sender: NixUniversalSDK.IDeviceScanner","    ) {","        \/\/ ...","    }","","    func onScannerStopped(","        _ sender: NixUniversalSDK.IDeviceScanner","    ) {","        \/\/ ...","    }","","    \/\/ MARK: DeviceScanner","    func startSearch {","        let callback: DeviceFoundCallback = { device in","            if let device {","                \/\/ Nearby device found","                \/\/ Handle discovery here ...","","                \/\/ Valid to query some parameters now:","                print(\"Found \\(device.name) with id \\(device.id) at RSSI \\(device.rssi)\")","            }","        }","        let newState: DeviceScannerState = scanner?.start(closure: callback)","    }","}"]},{"level":4,"type":"heading","text":"Objective-C example","anchor":"Objective-C-example"},{"inlineContent":[{"type":"text","text":"TBD"}],"type":"paragraph"},{"level":2,"text":"Next Steps","anchor":"Next-Steps","type":"heading"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","isActive":true}],"type":"paragraph"}]}]}]}],"kind":"article","metadata":{"role":"article","title":"Discovering and Connecting to Nix Devices","roleHeading":"Article","modules":[{"name":"NixUniversalSDK"}]},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/release-notes":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","abstract":[{"type":"text","text":"Review the changes made in this version of the library"}],"type":"topic","title":"Release Notes","role":"article","kind":"article","url":"\/documentation\/nixuniversalsdk\/release-notes"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/type":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/type","abstract":[{"type":"text","text":"Type for this device"}],"title":"type","role":"symbol","required":true,"type":"topic","fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceType"}],"navigatorTitle":[{"text":"type","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/type","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IDeviceCompat","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","navigatorTitle":[{"text":"IDeviceCompat","kind":"identifier"}],"type":"topic","title":"IDeviceCompat","url":"\/documentation\/nixuniversalsdk\/idevicecompat","role":"symbol","abstract":[{"text":"Protocol describing the supported properties and methods for a Nix device. ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"type":"text","text":" objects are found nearby using the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference","isActive":true},{"text":".","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"LicenseManager"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"LicenseManager","kind":"identifier"}],"title":"LicenseManager","role":"symbol","url":"\/documentation\/nixuniversalsdk\/licensemanager"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceFoundCallback":{"abstract":[{"text":"Definition for a closure invoked when an ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner"},{"type":"text","text":" has discovered a supported Nix device"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback","title":"DeviceFoundCallback","role":"symbol","fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DeviceFoundCallback","kind":"identifier"}],"navigatorTitle":[{"text":"DeviceFoundCallback","kind":"identifier"}],"type":"topic","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/devicefoundcallback"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate":{"type":"topic","role":"symbol","navigatorTitle":[{"text":"ScannerStateDelegate","kind":"identifier"}],"kind":"symbol","title":"ScannerStateDelegate","url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate","abstract":[{"type":"text","text":"Protocol definition for a callback to be invoked when an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","type":"reference","isActive":true},{"type":"text","text":" starts or stops a search."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ScannerStateDelegate","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner/DEFAULT_SINGLE_DEVICE_PERIOD_MS":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_SINGLE_DEVICE_PERIOD_MS","abstract":[{"text":"Scan period in milliseconds (10000) used when no time period is provided to ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)","isActive":true}],"role":"symbol","title":"DEFAULT_SINGLE_DEVICE_PERIOD_MS","kind":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"text":"DEFAULT_SINGLE_DEVICE_PERIOD_MS","kind":"identifier"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/devicescanner\/default_single_device_period_ms"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/wrapper":{"role":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper","abstract":[{"text":"Review an example project which provides a C\/C++ interface on macOS","type":"text"}],"title":"Wrapper for Usage in C\/C++","kind":"article","type":"topic","url":"\/documentation\/nixuniversalsdk\/wrapper"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScannerState/IDLE":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDLE"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/IDLE","type":"topic","url":"\/documentation\/nixuniversalsdk\/devicescannerstate\/idle","abstract":[{"type":"text","text":"Bluetooth scanner is not actively searching for devices."}],"navigatorTitle":[{"kind":"identifier","text":"DeviceScannerStateIDLE"}],"kind":"symbol","title":"DeviceScannerState.IDLE"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/activating-license":{"role":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","abstract":[{"text":"Enable Nix device functions with your license code","type":"text"}],"title":"Activating the SDK License","kind":"article","type":"topic","url":"\/documentation\/nixuniversalsdk\/activating-license"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/allowedDeviceTypes-4f98s":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"allowedDeviceTypes"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sh","text":"Set"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceType","text":"DeviceType"},{"text":">","kind":"text"}],"title":"allowedDeviceTypes","role":"symbol","type":"topic","abstract":[{"text":"Set of device types supported by the current license. Available in Swift only.","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager\/alloweddevicetypes-4f98s","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/allowedDeviceTypes-4f98s"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/name":{"abstract":[{"type":"text","text":"Name for this device"}],"title":"name","navigatorTitle":[{"text":"name","kind":"identifier"}],"kind":"symbol","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/name","role":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/name","required":true,"fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/rssi":{"kind":"symbol","navigatorTitle":[{"text":"rssi","kind":"identifier"}],"abstract":[{"text":"Signal strength for this device","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/rssi","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rssi","required":true,"title":"rssi","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"kind":"identifier","text":"rssi"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/startSearchForId(_:closure:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)","abstract":[{"type":"text","text":"Starts a search for a specific Nix device using Bluetooth. The search will run until the specified device is found, or until "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_SINGLE_DEVICE_PERIOD_MS","isActive":true,"type":"reference"},{"type":"text","text":" elapses, whichever is shorter. Invoked with a "},{"type":"codeVoice","code":"nil"},{"type":"text","text":" result when a search times out and device was not found."}],"role":"symbol","title":"startSearchForId(_:closure:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"startSearchForId","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"closure","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceFoundCallback","kind":"typeIdentifier","preciseIdentifier":"s:15NixUniversalSDK19DeviceFoundCallbacka"},{"text":") -> ","kind":"text"},{"text":"DeviceScannerState","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState","kind":"typeIdentifier"}],"type":"topic","navigatorTitle":[{"text":"startSearchForId:withClosure:","kind":"identifier"}],"required":true,"url":"\/documentation\/nixuniversalsdk\/idevicescanner\/startsearchforid(_:closure:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/add-to-xcode":{"title":"Adding to Your Xcode Project","abstract":[{"type":"text","text":"Add the library bundle to your project and declare peripheral uses"}],"kind":"article","url":"\/documentation\/nixuniversalsdk\/add-to-xcode","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","role":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/example-apps":{"type":"topic","kind":"article","title":"Example Applications","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","role":"article","abstract":[{"text":"Explore source code for demo iOS and macOS applications","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/example-apps"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/device-operations":{"abstract":[{"text":"Take measurements, set device options, and query device properties","type":"text"}],"title":"Device Operations","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","type":"topic","kind":"article","url":"\/documentation\/nixuniversalsdk\/device-operations","role":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner/DEFAULT_GENERAL_SCAN_PERIOD_MS":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"let"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DEFAULT_GENERAL_SCAN_PERIOD_MS"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"}],"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS","kind":"symbol","title":"DEFAULT_GENERAL_SCAN_PERIOD_MS","abstract":[{"type":"text","text":"Scan period in milliseconds (20000) used when no time period is provided to "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)"}],"url":"\/documentation\/nixuniversalsdk\/devicescanner\/default_general_scan_period_ms","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner":{"kind":"symbol","type":"topic","role":"symbol","abstract":[{"text":"Class used to discover nearby Nix devices","type":"text"}],"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeviceScanner"}],"navigatorTitle":[{"kind":"identifier","text":"DeviceScanner"}],"url":"\/documentation\/nixuniversalsdk\/devicescanner","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","title":"DeviceScanner"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/interfaceType":{"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"interfaceType","kind":"identifier"},{"text":": ","kind":"text"},{"text":"InterfaceType","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@InterfaceType"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/interfaceType","navigatorTitle":[{"text":"interfaceType","kind":"identifier"}],"type":"topic","title":"interfaceType","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/interfacetype","required":true,"role":"symbol","abstract":[{"text":"Interface \/ connection type for this device","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScannerState/ERROR_LICENSE":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"ERROR_LICENSE","kind":"identifier"}],"navigatorTitle":[{"text":"DeviceScannerStateERROR_LICENSE","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/ERROR_LICENSE","title":"DeviceScannerState.ERROR_LICENSE","url":"\/documentation\/nixuniversalsdk\/devicescannerstate\/error_license","kind":"symbol","abstract":[{"type":"text","text":"Bluetooth scanner could not start due to a problem with the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"type":"text","text":". Check "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","type":"reference","isActive":true},{"type":"text","text":" for details."}],"type":"topic","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/id":{"kind":"symbol","navigatorTitle":[{"kind":"identifier","text":"id"}],"abstract":[{"type":"text","text":"Unique identifier for this device"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/id","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","required":true,"title":"id","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/start(scanPeriodMs:closure:)":{"url":"\/documentation\/nixuniversalsdk\/idevicescanner\/start(scanperiodms:closure:)","required":true,"fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"start","kind":"identifier"},{"kind":"text","text":"("},{"text":"scanPeriodMs","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"text":"closure","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15NixUniversalSDK19DeviceFoundCallbacka","text":"DeviceFoundCallback","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"DeviceScannerState","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)","navigatorTitle":[{"text":"startForPeriodMs:withClosure:","kind":"identifier"}],"role":"symbol","abstract":[{"text":"Starts a search for nearby Nix devices using Bluetooth for a selected time interval. If no timeout interval is specified, the search will run for ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS"},{"type":"text","text":"."}],"kind":"symbol","title":"start(scanPeriodMs:closure:)","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState","text":"LicenseManagerState","kind":"typeIdentifier"}],"title":"state","role":"symbol","navigatorTitle":[{"text":"state","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Describes the current state of the  "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager"},{"type":"text","text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE"},{"type":"text","text":")"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManagerState/ACTIVE":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","kind":"symbol","abstract":[{"type":"text","text":"The license has activated successfully and Nix Universal SDK functions are available."}],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"ACTIVE"}],"role":"symbol","navigatorTitle":[{"kind":"identifier","text":"LicenseManagerStateACTIVE"}],"title":"LicenseManagerState.ACTIVE","url":"\/documentation\/nixuniversalsdk\/licensemanagerstate\/active"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate/onScannerStopped(_:)":{"navigatorTitle":[{"kind":"identifier","text":"onScannerStopped:"}],"abstract":[{"type":"text","text":"Called when an "},{"type":"codeVoice","code":"IDeviceScanner"},{"type":"text","text":" has stopped searching"}],"url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate\/onscannerstopped(_:)","required":true,"type":"topic","title":"onScannerStopped(_:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerStopped(_:)","kind":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onScannerStopped","kind":"identifier"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IDeviceScanner","text":"IDeviceScanner","kind":"typeIdentifier"},{"text":")","kind":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/handling-measurements":{"title":"Handling Measurement Data","abstract":[{"text":"Query measurement values including colorimetry, spectral reflectance, and density","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","role":"article","kind":"article","url":"\/documentation\/nixuniversalsdk\/handling-measurements"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate/onScannerInit(_:state:)":{"role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"onScannerInit","kind":"identifier"},{"kind":"text","text":"("},{"text":"IDeviceScanner","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IDeviceScanner"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState","text":"DeviceScannerState","kind":"typeIdentifier"},{"text":")","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"onScannerInit:state:"}],"url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate\/onscannerinit(_:state:)","kind":"symbol","title":"onScannerInit(_:state:)","type":"topic","abstract":[{"text":"Called when the ","type":"text"},{"type":"codeVoice","code":"IDeviceScanner"},{"type":"text","text":" has initialized. Check "},{"type":"codeVoice","code":"state"},{"type":"text","text":" to determine success or failure code."}],"required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerInit(_:state:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner":{"url":"\/documentation\/nixuniversalsdk\/idevicescanner","role":"symbol","abstract":[{"type":"text","text":"Protocol implemented by the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true}],"type":"topic","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"IDeviceScanner","kind":"identifier"}],"title":"IDeviceScanner","navigatorTitle":[{"kind":"identifier","text":"IDeviceScanner"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/stop()":{"role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"text":"()","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()","type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicescanner\/stop()","abstract":[{"text":"Stops a Bluetooth search if one is currently running.","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"stop"}],"kind":"symbol","required":true,"title":"stop()"}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"value":null,"op":"add","path":"\/topicSections"},{"op":"replace","value":[{"title":"Getting Started","anchor":"Getting-Started","generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"]}],"path":"\/seeAlsoSections"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1type\/title","value":"type"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1type\/fragments","value":[{"kind":"identifier","text":"type"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","op":"replace","value":"IDeviceCompat"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","op":"replace","value":[{"kind":"identifier","text":"IDeviceCompat"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace","value":"LicenseManager"},{"value":[{"kind":"identifier","text":"LicenseManager"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle","value":[{"text":"LicenseManager","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/title","value":"ScannerStateDelegate"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/fragments","value":[{"kind":"identifier","text":"ScannerStateDelegate"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/navigatorTitle","value":[{"text":"ScannerStateDelegate","kind":"identifier"}]},{"value":"DeviceScannerStateIDLE","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1IDLE\/title"},{"op":"replace","value":[{"kind":"identifier","text":"DeviceScannerStateIDLE"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1IDLE\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1name\/title","value":"name"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1name\/fragments","value":[{"text":"name","kind":"identifier"}]},{"value":"rssi","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rssi\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rssi\/fragments","value":[{"text":"rssi","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1startSearchForId(_:closure:)\/title","value":"startSearchForId:withClosure:"},{"value":[{"text":"- ","kind":"text"},{"text":"startSearchForId:withClosure:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1startSearchForId(_:closure:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/title","value":"DeviceScanner"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/fragments","op":"replace","value":[{"kind":"identifier","text":"DeviceScanner"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/navigatorTitle","value":[{"kind":"identifier","text":"DeviceScanner"}]},{"value":"interfaceType","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1interfaceType\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1interfaceType\/fragments","value":[{"text":"interfaceType","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1ERROR_LICENSE\/title","value":"DeviceScannerStateERROR_LICENSE"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1ERROR_LICENSE\/fragments","value":[{"text":"DeviceScannerStateERROR_LICENSE","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"id","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1id\/title"},{"value":[{"kind":"identifier","text":"id"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1id\/fragments"},{"value":"startForPeriodMs:withClosure:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1start(scanPeriodMs:closure:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1start(scanPeriodMs:closure:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"startForPeriodMs:withClosure:","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"state","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title"},{"op":"replace","value":[{"text":"state","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManagerState~1ACTIVE\/title","value":"LicenseManagerStateACTIVE"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManagerState~1ACTIVE\/fragments","value":[{"kind":"identifier","text":"LicenseManagerStateACTIVE"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerStopped(_:)\/title","value":"onScannerStopped:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerStopped(_:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"onScannerStopped:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerInit(_:state:)\/title","op":"replace","value":"onScannerInit:state:"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onScannerInit:state:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerInit(_:state:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/title","value":"IDeviceScanner"},{"value":[{"text":"IDeviceScanner","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/fragments"},{"value":[{"text":"IDeviceScanner","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/navigatorTitle"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/title","value":"stop"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/fragments","op":"replace","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"stop"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}