{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument"]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"]]},"abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}],"platforms":["macOS"],"languages":["swift"]}]}],"sections":[],"kind":"symbol","metadata":{"symbolKind":"case","role":"symbol","externalID":"c:@M@NixUniversalSDK@E@CommandStatus@CommandStatusERROR_INVALID_ARGUMENT","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"title":"CommandStatus.ERROR_INVALID_ARGUMENT","roleHeading":"Case","modules":[{"name":"NixUniversalSDK"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"kind":"symbol","role":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","isActive":true,"type":"reference"},{"text":".","type":"text"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}],"title":"CommandStatus"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","title":"CommandStatus.ERROR_INVALID_ARGUMENT","type":"topic","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because it contained invalid arguments."}],"kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"kind":"symbol","role":"collection","title":"NixUniversalSDK","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","navigatorTitle":[{"text":"DeviceResultCallback","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceResultCallback"}],"type":"topic","title":"DeviceResultCallback","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"type":"text","text":" instance."}]}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"value":"occ","path":"\/identifier\/interfaceLanguage","op":"replace"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Enumeration Case"},{"op":"replace","value":"CommandStatusERROR_INVALID_ARGUMENT","path":"\/metadata\/title"},{"value":"case","op":"replace","path":"\/metadata\/symbolKind"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"op":"replace","path":"\/metadata\/fragments"},{"value":null,"op":"add","path":"\/topicSections"},{"path":"\/relationshipsSections","op":"add","value":null},{"path":"\/seeAlsoSections","value":null,"op":"add"},{"path":"\/primaryContentSections\/0","op":"replace","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"languages":["occ"],"platforms":["macOS"]}]}},{"value":"CommandStatus","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","op":"replace","value":"CommandStatusERROR_INVALID_ARGUMENT"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}]}]}]}