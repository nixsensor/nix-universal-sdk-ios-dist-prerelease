{"schemaVersion":{"major":0,"minor":3,"patch":0},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["macOS"],"tokens":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}]}],"kind":"declarations"}],"sections":[],"metadata":{"roleHeading":"Case","symbolKind":"case","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}],"modules":[{"name":"NixUniversalSDK"}],"externalID":"c:@M@NixUniversalSDK@E@CommandStatus@CommandStatusERROR_INVALID_ARGUMENT","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"title":"CommandStatus.ERROR_INVALID_ARGUMENT"},"kind":"symbol","abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument"]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance."}],"navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"title":"DeviceResultCallback","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeviceResultCallback","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"type":"topic","title":"CommandStatus","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","type":"topic","kind":"symbol","url":"\/documentation\/nixuniversalsdk","title":"NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"role":"collection"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}],"title":"CommandStatus.ERROR_INVALID_ARGUMENT"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"op":"replace","path":"\/metadata\/roleHeading","value":"Enumeration Case"},{"value":"CommandStatusERROR_INVALID_ARGUMENT","op":"replace","path":"\/metadata\/title"},{"op":"replace","value":"case","path":"\/metadata\/symbolKind"},{"path":"\/metadata\/fragments","value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"op":"replace"},{"op":"add","path":"\/topicSections","value":null},{"op":"add","path":"\/relationshipsSections","value":null},{"value":null,"op":"add","path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"languages":["occ"],"platforms":["macOS"],"tokens":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}]}],"kind":"declarations"},"op":"replace"},{"value":"CommandStatus","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","op":"replace","value":"CommandStatusERROR_INVALID_ARGUMENT"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}]}]}]}