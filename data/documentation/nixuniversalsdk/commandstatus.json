{"kind":"symbol","relationshipsSections":[{"type":"conformsTo","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"],"kind":"relationships","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","interfaceLanguage":"swift"},"topicSections":[{"anchor":"Enumeration-Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"title":"Enumeration Cases","generated":true},{"anchor":"Initializers","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"],"generated":true,"title":"Initializers"},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"],"generated":true,"anchor":"Instance-Properties","title":"Instance Properties"},{"title":"Default Implementations","generated":true,"anchor":"Default-Implementations","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"]}],"sections":[],"schemaVersion":{"minor":3,"major":0,"patch":0},"abstract":[{"type":"text","text":"Enum describing the possible status of commands executed by the Nix device, as provided in the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"text":".","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"kind":"attribute","text":"@objc"},{"kind":"text","text":" "},{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]},{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"occ"}]}],"metadata":{"title":"CommandStatus","role":"symbol","modules":[{"name":"NixUniversalSDK"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}],"roleHeading":"Enumeration","symbolKind":"enum","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"externalID":"c:@M@NixUniversalSDK@E@CommandStatus"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","type":"topic","kind":"symbol","url":"\/documentation\/nixuniversalsdk","title":"NixUniversalSDK","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"role":"collection"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","type":"reference","isActive":true},{"text":" command.","type":"text"}],"navigatorTitle":[{"text":"CommandStatusERROR_SCAN_DELTA","kind":"identifier"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_SCAN_DELTA","kind":"identifier"}],"title":"CommandStatus.ERROR_SCAN_DELTA","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"title":"CommandStatus.ERROR_NOT_SUPPORTED","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","kind":"symbol","type":"topic","abstract":[{"text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance.","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance."}],"navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"title":"DeviceResultCallback","type":"topic","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"text":"DeviceResultCallback","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations","abstract":[],"kind":"article","type":"topic","role":"collectionGroup","url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations","title":"RawRepresentable Implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_AMBIENT_LIGHT"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light","type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","abstract":[{"type":"text","text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage."}],"title":"CommandStatus.ERROR_AMBIENT_LIGHT"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LicenseManager","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","title":"LicenseManager","navigatorTitle":[{"kind":"identifier","text":"LicenseManager"}],"type":"topic","abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","abstract":[{"type":"text","text":"String representation of this "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"}],"fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","type":"topic","title":"name","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement)."}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_LOW_POWER"}],"title":"CommandStatus.ERROR_LOW_POWER"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a timeout error."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_TIMEOUT","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout","type":"topic","title":"CommandStatus.ERROR_TIMEOUT","kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","type":"reference","isActive":true},{"type":"text","text":"."}],"navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"type":"topic","title":"CommandStatus","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"topic","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IDeviceCompat"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat","navigatorTitle":[{"text":"IDeviceCompat","kind":"identifier"}],"title":"IDeviceCompat","abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true,"type":"reference"},{"type":"text","text":" objects are found nearby using the "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference"},{"type":"text","text":"."}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","abstract":[],"kind":"symbol","type":"topic","role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")","kind":"text"}],"title":"init(rawValue:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"navigatorTitle":[{"kind":"identifier","text":"runFieldCalibration:completion:"}],"abstract":[{"type":"text","text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately."},{"type":"text","text":" "},{"text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","required":true,"title":"runFieldCalibration(tileString:completion:)","kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"runFieldCalibration"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"tileString"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DeviceResultCallback","kind":"typeIdentifier","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka"},{"text":")","kind":"text"}]},"doc://com.nixsensor.universalsdk/SH":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","type":"unresolvable","title":"Swift.Hashable"},"doc://com.nixsensor.universalsdk/SQ":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command)."}],"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_READY","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready","type":"topic","title":"CommandStatus.ERROR_NOT_READY","kind":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"kind":"symbol","type":"topic","role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_INVALID_ARGUMENT"}],"title":"CommandStatus.ERROR_INVALID_ARGUMENT"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","abstract":[{"type":"text","text":"Status code indicating that the command completed successfully."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SUCCESS","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","type":"topic","title":"CommandStatus.SUCCESS","kind":"symbol","navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"title":"CommandStatus.WARNING_TEMPERATURE","url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","kind":"symbol","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true},{"text":" command.","type":"text"}],"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"WARNING_TEMPERATURE"}],"navigatorTitle":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","navigatorTitle":[{"kind":"identifier","text":"state"}],"title":"state","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"state"},{"kind":"text","text":": "},{"text":"LicenseManagerState","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","abstract":[{"type":"text","text":"Describes the current state of the  "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","type":"reference"},{"text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE"},{"text":")","type":"text"}],"type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"role":"symbol","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a problem with the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","type":"reference","isActive":true},{"text":". Check ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true},{"text":" for details.","type":"text"}],"title":"CommandStatus.ERROR_LICENSE","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_LICENSE","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"abstract":[{"type":"text","text":"Status code indicating that the command failed due to an unknown \/ internal SDK error."}],"type":"topic","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_INTERNAL","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INTERNAL"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","title":"CommandStatus.ERROR_INTERNAL"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations","role":"collectionGroup","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","kind":"article","abstract":[]},"doc://com.nixsensor.universalsdk/SY":{"title":"Swift.RawRepresentable","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SY"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"Enumeration","path":"\/metadata\/roleHeading","op":"replace"},{"op":"replace","value":"CommandStatus","path":"\/metadata\/title"},{"path":"\/metadata\/symbolKind","value":"enum","op":"replace"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}]},{"value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/metadata\/navigatorTitle","op":"replace"},{"path":"\/topicSections","value":[{"anchor":"Enumeration-Cases","title":"Enumeration Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true}],"op":"replace"},{"value":null,"op":"replace","path":"\/relationshipsSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"},{"text":": ","kind":"text"},{"text":"NSInteger","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSInteger"},{"text":";","kind":"text"}],"platforms":["macOS"],"languages":["occ"]}],"kind":"declarations"},"op":"replace"},{"value":"CommandStatusERROR_SCAN_DELTA","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"op":"replace"},{"value":"CommandStatusERROR_NOT_SUPPORTED","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title","op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","value":"CommandStatusERROR_AMBIENT_LIGHT"},{"op":"replace","value":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments"},{"value":"LicenseManager","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title"},{"value":[{"kind":"identifier","text":"LicenseManager"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle","value":[{"text":"LicenseManager","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title","value":"CommandStatusERROR_LOW_POWER"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments","value":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title","value":"CommandStatusERROR_TIMEOUT","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"CommandStatusERROR_TIMEOUT"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments"},{"value":"CommandStatus","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","op":"replace"},{"value":[{"text":"CommandStatus","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments","op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle"},{"value":"IDeviceCompat","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"text":"IDeviceCompat","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","value":[{"kind":"identifier","text":"IDeviceCompat"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","value":"runFieldCalibration:completion:","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments","value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"runFieldCalibration:completion:"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title","value":"CommandStatusERROR_NOT_READY","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_READY"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","value":"CommandStatusERROR_INVALID_ARGUMENT","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_INVALID_ARGUMENT"}],"op":"replace"},{"value":"CommandStatusSUCCESS","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments","value":[{"kind":"identifier","text":"CommandStatusSUCCESS"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title","op":"replace","value":"CommandStatusWARNING_TEMPERATURE"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments","value":[{"kind":"identifier","text":"CommandStatusWARNING_TEMPERATURE"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","value":"state"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments","op":"replace","value":[{"text":"state","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","value":"CommandStatusERROR_LICENSE"},{"op":"replace","value":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title","value":"CommandStatusERROR_INTERNAL","op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_INTERNAL"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments"}]}]}