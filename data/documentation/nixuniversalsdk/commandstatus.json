{"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"topicSections":[{"title":"Enumeration Cases","generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"anchor":"Enumeration-Cases"},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"],"anchor":"Initializers","generated":true,"title":"Initializers"},{"anchor":"Instance-Properties","title":"Instance Properties","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"],"generated":true},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"],"generated":true,"anchor":"Default-Implementations","title":"Default Implementations"}],"kind":"symbol","relationshipsSections":[{"kind":"relationships","title":"Conforms To","type":"conformsTo","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"]}],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["macOS"],"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"languages":["swift"]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]},{"paths":["\/documentation\/nixuniversalsdk\/commandstatus"],"traits":[{"interfaceLanguage":"occ"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"text":".","type":"text"}],"metadata":{"modules":[{"name":"NixUniversalSDK"}],"role":"symbol","title":"CommandStatus","symbolKind":"enum","externalID":"c:@M@NixUniversalSDK@E@CommandStatus","roleHeading":"Enumeration","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"CommandStatus"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}]},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a timeout error."}],"title":"CommandStatus.ERROR_TIMEOUT","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_TIMEOUT"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout","role":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_TIMEOUT"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"fragments":[{"text":"typealias","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"DeviceResultCallback"}],"type":"topic","title":"DeviceResultCallback","navigatorTitle":[{"kind":"identifier","text":"DeviceResultCallback"}],"abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"text":" instance.","type":"text"}],"role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","type":"topic","role":"symbol","title":"CommandStatus.ERROR_INTERNAL","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_INTERNAL","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command failed due to an unknown \/ internal SDK error.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"kind":"symbol","title":"CommandStatus.ERROR_SCAN_DELTA","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)"},{"type":"text","text":" command."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_SCAN_DELTA"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"kind":"symbol","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_LICENSE"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","abstract":[{"text":"Status code indicating that the command failed due to a problem with the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true,"type":"reference"},{"type":"text","text":". Check "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state"},{"type":"text","text":" for details."}],"type":"topic","title":"CommandStatus.ERROR_LICENSE","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","title":"IDeviceCompat","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"IDeviceCompat","kind":"identifier"}],"type":"topic","navigatorTitle":[{"text":"IDeviceCompat","kind":"identifier"}],"role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true},{"text":" objects are found nearby using the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"type":"text","text":"."}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat"},"doc://com.nixsensor.universalsdk/SH":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","type":"topic","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","abstract":[{"type":"text","text":"Describes the current state of the  "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","type":"reference"},{"type":"text","text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","isActive":true,"type":"reference"},{"text":")","type":"text"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState","text":"LicenseManagerState","kind":"typeIdentifier"}],"title":"state","navigatorTitle":[{"text":"state","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"kind":"article","abstract":[],"title":"RawRepresentable Implementations","url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"role":"symbol","navigatorTitle":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command was aborted because it contained invalid arguments.","type":"text"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}],"kind":"symbol","title":"CommandStatus.ERROR_INVALID_ARGUMENT","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","type":"topic","kind":"symbol","title":"CommandStatus.ERROR_NOT_READY","abstract":[{"text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command).","type":"text"}],"navigatorTitle":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ERROR_NOT_READY"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SUCCESS","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusSUCCESS","kind":"identifier"}],"title":"CommandStatus.SUCCESS","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/success","role":"symbol","abstract":[{"text":"Status code indicating that the command completed successfully.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_LOW_POWER","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","kind":"symbol","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","type":"topic","title":"CommandStatus.ERROR_LOW_POWER","navigatorTitle":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"abstract":[{"text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement).","type":"text"}]},"doc://com.nixsensor.universalsdk/SQ":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"WARNING_TEMPERATURE","kind":"identifier"}],"type":"topic","title":"CommandStatus.WARNING_TEMPERATURE","navigatorTitle":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","abstract":[{"text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","isActive":true,"type":"reference"},{"type":"text","text":" command."}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}],"abstract":[{"type":"text","text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance."}],"title":"CommandStatus.ERROR_NOT_SUPPORTED","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","kind":"symbol","abstract":[{"type":"text","text":"String representation of this "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","type":"reference","isActive":true}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","title":"name","role":"symbol","fragments":[{"kind":"keyword","text":"var"},{"text":" ","kind":"text"},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"type":"topic","title":"Equatable Implementations","role":"collectionGroup","abstract":[],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations","kind":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"url":"\/documentation\/nixuniversalsdk\/licensemanager","title":"LicenseManager","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","navigatorTitle":[{"text":"LicenseManager","kind":"identifier"}],"abstract":[{"text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties.","type":"text"}],"kind":"symbol","role":"symbol","type":"topic","fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"LicenseManager"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"title":"CommandStatus","role":"symbol","abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":"."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","kind":"symbol","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)","fragments":[{"text":"init","kind":"identifier"},{"kind":"text","text":"?("},{"text":"rawValue","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"title":"init(rawValue:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","abstract":[{"type":"text","text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_AMBIENT_LIGHT"}],"title":"CommandStatus.ERROR_AMBIENT_LIGHT","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_AMBIENT_LIGHT","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/SY":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SY","type":"unresolvable","title":"Swift.RawRepresentable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"url":"\/documentation\/nixuniversalsdk","abstract":[{"type":"text","text":"A library to allow integration of Nix devices into third-party iOS and macOS applications."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","role":"collection","title":"NixUniversalSDK","type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"abstract":[{"type":"text","text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately."},{"text":" ","type":"text"},{"text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code.","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"role":"symbol","kind":"symbol","title":"runFieldCalibration(tileString:completion:)","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","required":true,"type":"topic","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"runFieldCalibration","kind":"identifier"},{"text":"(","kind":"text"},{"text":"tileString","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"completion"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","text":"DeviceResultCallback","kind":"typeIdentifier"},{"kind":"text","text":")"}]}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"path":"\/metadata\/roleHeading","op":"replace","value":"Enumeration"},{"path":"\/metadata\/title","op":"replace","value":"CommandStatus"},{"op":"replace","value":"enum","path":"\/metadata\/symbolKind"},{"op":"replace","path":"\/metadata\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}]},{"op":"replace","value":[{"kind":"identifier","text":"CommandStatus"}],"path":"\/metadata\/navigatorTitle"},{"op":"replace","path":"\/topicSections","value":[{"title":"Enumeration Cases","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true,"anchor":"Enumeration-Cases"}]},{"op":"replace","value":null,"path":"\/relationshipsSections"},{"op":"add","value":null,"path":"\/seeAlsoSections"},{"op":"replace","path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"c:@T@NSInteger","text":"NSInteger"},{"kind":"text","text":";"}],"platforms":["macOS"],"languages":["occ"]}]}},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title","value":"CommandStatusERROR_TIMEOUT","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}]},{"op":"replace","value":"CommandStatusERROR_INTERNAL","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments","value":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}],"op":"replace"},{"value":"CommandStatusERROR_SCAN_DELTA","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_SCAN_DELTA","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","op":"replace","value":"CommandStatusERROR_LICENSE"},{"value":[{"text":"CommandStatusERROR_LICENSE","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","value":"IDeviceCompat","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","op":"replace","value":[{"text":"IDeviceCompat","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","value":"state","op":"replace"},{"value":[{"kind":"identifier","text":"state"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","value":"CommandStatusERROR_INVALID_ARGUMENT"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title","value":"CommandStatusERROR_NOT_READY","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_READY"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title","value":"CommandStatusSUCCESS","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments","value":[{"kind":"identifier","text":"CommandStatusSUCCESS"}],"op":"replace"},{"op":"replace","value":"CommandStatusERROR_LOW_POWER","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments","op":"replace","value":[{"kind":"identifier","text":"CommandStatusERROR_LOW_POWER"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title","value":"CommandStatusWARNING_TEMPERATURE"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments","value":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title","op":"replace","value":"CommandStatusERROR_NOT_SUPPORTED"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}],"op":"replace"},{"value":"LicenseManager","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace"},{"op":"replace","value":[{"kind":"identifier","text":"LicenseManager"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments"},{"value":[{"text":"LicenseManager","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle"},{"op":"replace","value":"CommandStatus","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","value":"CommandStatusERROR_AMBIENT_LIGHT"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments","value":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title","op":"replace","value":"runFieldCalibration:completion:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments","op":"replace","value":[{"text":"- ","kind":"text"},{"text":"runFieldCalibration:completion:","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}