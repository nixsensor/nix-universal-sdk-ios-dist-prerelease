{"topicSections":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"},{"anchor":"Initializers","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)"],"title":"Initializers","generated":true},{"title":"Instance Properties","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name"],"anchor":"Instance-Properties","generated":true},{"anchor":"Default-Implementations","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"],"title":"Default Implementations","generated":true}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/commandstatus"]}],"sections":[],"relationshipsSections":[{"kind":"relationships","type":"conformsTo","title":"Conforms To","identifiers":["doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH","doc:\/\/com.nixsensor.universalsdk\/SY"]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","interfaceLanguage":"swift"},"kind":"symbol","metadata":{"externalID":"c:@M@NixUniversalSDK@E@CommandStatus","modules":[{"name":"NixUniversalSDK"}],"symbolKind":"enum","title":"CommandStatus","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"CommandStatus"}],"roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}]},"schemaVersion":{"patch":0,"minor":3,"major":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"@objc","kind":"attribute"},{"text":" ","kind":"text"},{"kind":"keyword","text":"enum"},{"text":" ","kind":"text"},{"text":"CommandStatus","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}]}],"abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"text":".","type":"text"}],"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/SUCCESS":{"abstract":[{"type":"text","text":"Status code indicating that the command completed successfully."}],"role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"kind":"identifier","text":"SUCCESS"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusSUCCESS"}],"title":"CommandStatus.SUCCESS","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/success"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","title":"state","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","type":"topic","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"state"},{"text":": ","kind":"text"},{"text":"LicenseManagerState","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState"}],"navigatorTitle":[{"kind":"identifier","text":"state"}],"role":"symbol","abstract":[{"text":"Describes the current state of the  ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE"},{"text":")","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus":{"title":"CommandStatus","type":"topic","role":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"}],"navigatorTitle":[{"text":"CommandStatus","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus","kind":"symbol","abstract":[{"text":"Enum describing the possible status of commands executed by the Nix device, as provided in the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback"},{"type":"text","text":"."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_AMBIENT_LIGHT":{"navigatorTitle":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"type":"topic","abstract":[{"type":"text","text":"Status code indicating that the measurement operation failed due to the detection of ambient light leakage."}],"kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_AMBIENT_LIGHT"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_ambient_light","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","role":"symbol","title":"CommandStatus.ERROR_AMBIENT_LIGHT"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceResultCallback":{"title":"DeviceResultCallback","navigatorTitle":[{"text":"DeviceResultCallback","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"DeviceResultCallback","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/deviceresultcallback","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceResultCallback","kind":"symbol","type":"topic","role":"symbol","abstract":[{"type":"text","text":"Definition for a closure providing a command result, invoked after executing an asynchronous command on an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"text":" instance.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"kind":"symbol","fragments":[{"text":"class","kind":"keyword"},{"text":" ","kind":"text"},{"text":"LicenseManager","kind":"identifier"}],"role":"symbol","url":"\/documentation\/nixuniversalsdk\/licensemanager","title":"LicenseManager","abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"navigatorTitle":[{"text":"LicenseManager","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LICENSE":{"kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a problem with the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"text":". Check ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true},{"type":"text","text":" for details."}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_LICENSE","kind":"identifier"}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_LICENSE"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_license","title":"CommandStatus.ERROR_LICENSE","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"text":"A library to allow integration of Nix devices into third-party iOS and macOS applications.","type":"text"}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_LOW_POWER":{"fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"ERROR_LOW_POWER","kind":"identifier"}],"navigatorTitle":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_low_power","kind":"symbol","title":"CommandStatus.ERROR_LOW_POWER","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because of a low power state on the Nix device (e.g. - insufficient battery power to complete a measurement)."}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_SCAN_DELTA":{"title":"CommandStatus.ERROR_SCAN_DELTA","type":"topic","abstract":[{"type":"text","text":"Status code indicating that the in-field calibration operation failed due to high delta E (i.e. - the calibration reference tile could not be verified by its color value). This status is only possible after a "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","type":"reference","isActive":true},{"type":"text","text":" command."}],"navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_SCAN_DELTA"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_SCAN_DELTA","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_scan_delta"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/init(rawValue:)":{"abstract":[],"title":"init(rawValue:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/init(rawValue:)","type":"topic","role":"symbol","fragments":[{"text":"init","kind":"identifier"},{"text":"?(","kind":"text"},{"kind":"externalParam","text":"rawValue"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/commandstatus\/init(rawvalue:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_READY":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_ready","role":"symbol","type":"topic","navigatorTitle":[{"text":"CommandStatusERROR_NOT_READY","kind":"identifier"}],"kind":"symbol","abstract":[{"text":"Status code indicating that the command was aborted because the Nix device was not ready (i.e. - it was already executing another command).","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","title":"CommandStatus.ERROR_NOT_READY","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_NOT_READY"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/name":{"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/name","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/name","kind":"symbol","abstract":[{"text":"String representation of this ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus","isActive":true}],"title":"name"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/runFieldCalibration(tileString:completion:)":{"abstract":[{"type":"text","text":"Start field calibration using provided reference tile, if supported. Upon executing this command, the scan of the reference tile will begin immediately. The user MUST be prompted to place the device onto the reference tile BEFORE this method is executed. This method is asynchronous and will return immediately."},{"type":"text","text":" "},{"text":"This command requires data from the reference tile QR code. As the format varies between different device types, the string data should be provided exactly as decoded from the QR code.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)","navigatorTitle":[{"text":"runFieldCalibration:completion:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/idevicecompat\/runfieldcalibration(tilestring:completion:)","kind":"symbol","required":true,"title":"runFieldCalibration(tileString:completion:)","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"runFieldCalibration","kind":"identifier"},{"kind":"text","text":"("},{"text":"tileString","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"completion","kind":"externalParam"},{"kind":"text","text":": "},{"text":"DeviceResultCallback","preciseIdentifier":"s:15NixUniversalSDK20DeviceResultCallbacka","kind":"typeIdentifier"},{"kind":"text","text":")"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"IDeviceCompat","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/idevicecompat","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"topic","navigatorTitle":[{"text":"IDeviceCompat","kind":"identifier"}],"role":"symbol","abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true},{"type":"text","text":" objects are found nearby using the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true},{"text":".","type":"text"}],"title":"IDeviceCompat"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_NOT_SUPPORTED":{"type":"topic","title":"CommandStatus.ERROR_NOT_SUPPORTED","navigatorTitle":[{"text":"CommandStatusERROR_NOT_SUPPORTED","kind":"identifier"}],"fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"ERROR_NOT_SUPPORTED","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_not_supported","kind":"symbol","abstract":[{"text":"Status code indicating that the command was aborted because the it was not supported by the Nix device instance.","type":"text"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INVALID_ARGUMENT":{"navigatorTitle":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","role":"symbol","kind":"symbol","abstract":[{"type":"text","text":"Status code indicating that the command was aborted because it contained invalid arguments."}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_invalid_argument","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"text":"ERROR_INVALID_ARGUMENT","kind":"identifier"}],"type":"topic","title":"CommandStatus.ERROR_INVALID_ARGUMENT"},"doc://com.nixsensor.universalsdk/SQ":{"title":"Swift.Equatable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/Equatable-Implementations":{"url":"\/documentation\/nixuniversalsdk\/commandstatus\/equatable-implementations","kind":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/Equatable-Implementations","type":"topic","role":"collectionGroup","title":"Equatable Implementations","abstract":[]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/RawRepresentable-Implementations":{"title":"RawRepresentable Implementations","kind":"article","url":"\/documentation\/nixuniversalsdk\/commandstatus\/rawrepresentable-implementations","type":"topic","abstract":[],"role":"collectionGroup","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/RawRepresentable-Implementations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/WARNING_TEMPERATURE":{"kind":"symbol","title":"CommandStatus.WARNING_TEMPERATURE","navigatorTitle":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/warning_temperature","role":"symbol","abstract":[{"text":"Status code indicating that the in-field calibration operation completed successfully, but a temperature warning was issued (i.e. - the ambient temperature of the device is currently outside of the recommended range). This status is only possible after a ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/runFieldCalibration(tileString:completion:)"},{"text":" command.","type":"text"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"WARNING_TEMPERATURE","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_TIMEOUT":{"role":"symbol","title":"CommandStatus.ERROR_TIMEOUT","navigatorTitle":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","kind":"symbol","type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"ERROR_TIMEOUT"}],"url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_timeout","abstract":[{"type":"text","text":"Status code indicating that the command failed due to a timeout error."}]},"doc://com.nixsensor.universalsdk/SY":{"title":"Swift.RawRepresentable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SY","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/CommandStatus/ERROR_INTERNAL":{"kind":"symbol","role":"symbol","title":"CommandStatus.ERROR_INTERNAL","url":"\/documentation\/nixuniversalsdk\/commandstatus\/error_internal","navigatorTitle":[{"kind":"identifier","text":"CommandStatusERROR_INTERNAL"}],"abstract":[{"type":"text","text":"Status code indicating that the command failed due to an unknown \/ internal SDK error."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","type":"topic","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"ERROR_INTERNAL","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/SH":{"title":"Swift.Hashable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","type":"unresolvable"}},"variantOverrides":[{"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"value":"Enumeration","op":"replace","path":"\/metadata\/roleHeading"},{"value":"CommandStatus","path":"\/metadata\/title","op":"replace"},{"op":"replace","path":"\/metadata\/symbolKind","value":"enum"},{"path":"\/metadata\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"op":"replace","path":"\/metadata\/navigatorTitle"},{"value":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_AMBIENT_LIGHT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INTERNAL","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_INVALID_ARGUMENT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LICENSE","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_LOW_POWER","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_READY","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_NOT_SUPPORTED","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_SCAN_DELTA","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/ERROR_TIMEOUT","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/SUCCESS","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/CommandStatus\/WARNING_TEMPERATURE"],"generated":true,"title":"Enumeration Cases","anchor":"Enumeration-Cases"}],"op":"replace","path":"\/topicSections"},{"op":"replace","value":null,"path":"\/relationshipsSections"},{"op":"add","path":"\/seeAlsoSections","value":null},{"op":"replace","path":"\/primaryContentSections\/0","value":{"declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"CommandStatus"},{"text":": ","kind":"text"},{"text":"NSInteger","kind":"typeIdentifier","preciseIdentifier":"c:@T@NSInteger"},{"text":";","kind":"text"}],"languages":["occ"],"platforms":["macOS"]}],"kind":"declarations"}},{"value":"CommandStatusSUCCESS","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1SUCCESS\/fragments","value":[{"text":"CommandStatusSUCCESS","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","op":"replace","value":"state"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments","value":[{"kind":"identifier","text":"state"}],"op":"replace"},{"value":"CommandStatus","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/fragments","value":[{"text":"CommandStatus","kind":"identifier"}],"op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatus"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/title","value":"CommandStatusERROR_AMBIENT_LIGHT","op":"replace"},{"value":[{"text":"CommandStatusERROR_AMBIENT_LIGHT","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_AMBIENT_LIGHT\/fragments"},{"value":"LicenseManager","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments","op":"replace","value":[{"text":"LicenseManager","kind":"identifier"}]},{"value":[{"kind":"identifier","text":"LicenseManager"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle"},{"value":"CommandStatusERROR_LICENSE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/title","op":"replace"},{"value":[{"text":"CommandStatusERROR_LICENSE","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LICENSE\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/title","op":"replace","value":"CommandStatusERROR_LOW_POWER"},{"value":[{"text":"CommandStatusERROR_LOW_POWER","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_LOW_POWER\/fragments","op":"replace"},{"op":"replace","value":"CommandStatusERROR_SCAN_DELTA","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_SCAN_DELTA\/fragments","op":"replace","value":[{"text":"CommandStatusERROR_SCAN_DELTA","kind":"identifier"}]},{"value":"CommandStatusERROR_NOT_READY","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_READY\/fragments","value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_READY"}]},{"op":"replace","value":"runFieldCalibration:completion:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/title"},{"value":[{"kind":"text","text":"- "},{"text":"runFieldCalibration:completion:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1runFieldCalibration(tileString:completion:)\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","value":"IDeviceCompat","op":"replace"},{"value":[{"kind":"identifier","text":"IDeviceCompat"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","op":"replace"},{"value":[{"kind":"identifier","text":"IDeviceCompat"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/title","value":"CommandStatusERROR_NOT_SUPPORTED","op":"replace"},{"value":[{"kind":"identifier","text":"CommandStatusERROR_NOT_SUPPORTED"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_NOT_SUPPORTED\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/title","value":"CommandStatusERROR_INVALID_ARGUMENT"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INVALID_ARGUMENT\/fragments","value":[{"text":"CommandStatusERROR_INVALID_ARGUMENT","kind":"identifier"}],"op":"replace"},{"op":"replace","value":"CommandStatusWARNING_TEMPERATURE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1WARNING_TEMPERATURE\/fragments","value":[{"text":"CommandStatusWARNING_TEMPERATURE","kind":"identifier"}]},{"op":"replace","value":"CommandStatusERROR_TIMEOUT","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/title"},{"op":"replace","value":[{"text":"CommandStatusERROR_TIMEOUT","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_TIMEOUT\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/title","op":"replace","value":"CommandStatusERROR_INTERNAL"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1CommandStatus~1ERROR_INTERNAL\/fragments","value":[{"text":"CommandStatusERROR_INTERNAL","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}