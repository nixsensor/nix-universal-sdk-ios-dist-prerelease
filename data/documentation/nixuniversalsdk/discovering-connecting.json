{"kind":"article","identifier":{"interfaceLanguage":"swift","url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/discovering-connecting"},"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"seeAlsoSections":[{"title":"Getting Started","generated":true,"anchor":"Getting-Started","identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"]}],"abstract":[{"text":"Use the device scanner to discover Nix devices and open a connection","type":"text"}],"sections":[],"schemaVersion":{"major":0,"patch":0,"minor":3},"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","text":"Overview","type":"heading","level":2},{"type":"paragraph","inlineContent":[{"text":"Regardless of device type, each unique Nix device can be represented by an object that conforms to the ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","isActive":true},{"type":"text","text":" protocol. To obtain instances of the device object, they need to first be discovered using the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"text":". They can also be recalled at a later time directly using their ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","isActive":true},{"type":"text","text":" property (for Bluetooth connected devices only)."}]},{"text":"Device Discovery","level":3,"anchor":"Device-Discovery","type":"heading"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"type":"text","text":" implements the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner"},{"type":"text","text":" protocol and searches for nearby Nix devices using Bluetooth. On macOS, the "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"type":"text","text":" will also report devices connected via USB. Scanner events are reported via:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"Delegate which must be specified when initializing the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true,"type":"reference"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"Reports when the scanner initializes, starts, and stops searching for devices"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback"},{"text":":","type":"text"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Closure which is called by the scanner each time that an "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},{"type":"text","text":" instance has been found"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Note that this will be called both when a new device is found and when the RSSI\/signal strength of a previously discovered device has changed.","type":"text"}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"It is possible to use the "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","isActive":true,"type":"reference"},{"type":"text","text":" parameter as a means to uniquely identify discovered devices."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Do not hold reference to stale "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"reference","isActive":true},{"text":" instances; use the most recently reported device instance when connecting to a device later.","type":"text"}]}]}],"type":"unorderedList"}]}]}]}]},{"name":"Note","style":"note","content":[{"inlineContent":[{"text":"Devices can only be discovered or recalled while your SDK licence is in an ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","type":"reference"},{"type":"text","text":" state; the current value is available via "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true,"type":"reference"},{"type":"text","text":". Only device types supported by your license can be discovered and connected; the current list of allowed types is available via "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/allowedDeviceTypes-4f98s","isActive":true},{"type":"text","text":"."}],"type":"paragraph"}],"type":"aside"},{"inlineContent":[{"type":"text","text":"To use the "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","isActive":true},{"type":"text","text":":"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"Initialize the scanner and check its state in "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerInit(_:state:)","type":"reference"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"text":"After a successful initialization, the state will be ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/IDLE","isActive":true}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"If the state is ","type":"text"},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/ERROR_LICENSE"},{"text":", check ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","isActive":true,"type":"reference"},{"text":" for further details.","type":"text"}],"type":"paragraph"}]}],"type":"unorderedList"}]},{"content":[{"inlineContent":[{"type":"text","text":"If the scanner has initialized successfully, the scanner can be started using "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"By default, the scanner will search for a period "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS","isActive":true,"type":"reference"},{"type":"text","text":", but this interval can be overridden by providing an argument for "},{"type":"codeVoice","code":"scanPeriodMs"},{"type":"text","text":"."}]}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Discovered devices will be reported via a ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback"},{"text":" closure. At this stage, it is valid to check a limited number of parameters:","type":"text"}]},{"items":[{"content":[{"inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","isActive":true,"type":"reference"},{"type":"text","text":": Device identifier string"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rssi","type":"reference"},{"type":"text","text":": Device signal strength (-127 to 0). Will be 0 for USB connected devices"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/interfaceType","isActive":true},{"type":"text","text":": Indicates whether the device was found via Bluetooth or USB connection"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/type","type":"reference","isActive":true},{"type":"text","text":": Indicates the specific device type"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/name","isActive":true,"type":"reference"},{"type":"text","text":": Full name of the device (e.g. ‘Nix Spectro 2’)"}]}]}],"type":"unorderedList"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"The device search will run for the specified duration, after which ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerStopped(_:)"},{"type":"text","text":" is called. The device search can also be manually stopped using "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()","isActive":true,"type":"reference"},{"text":".","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"To recall a specific Bluetooth connected device in a later app session, you can use "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)"},{"type":"text","text":". This will run the "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"},{"text":" searching for a specific device by its identifier, calling back only once when the device is first found.","type":"text"}]}]}],"type":"unorderedList"},{"text":"Swift example","level":4,"type":"heading","anchor":"Swift-example"},{"type":"codeListing","syntax":"swift","code":["import UIKit","import NixUniversalSDK","","class MyViewController: UIViewController, ScannerStateDelegate {","    var scanner: IDeviceScanner? = nil","","    override func viewDidLoad() {","        super.viewDidLoad()","        ","        \/\/ Initialize DeviceScanner","        scanner = DeviceScanner(delegate: self)","    }","","    \/\/ MARK: ScannerStateDelegate","    func onScannerInit(","        _ sender: NixUniversalSDK.IDeviceScanner, ","        state: DeviceScannerState","    ) {        ","        switch state {","        case .IDLE:","            \/\/ Successful initialization ... can start a search now","            break","        case .ERROR_BLUETOOTH_PERMISSIONS:","            \/\/ User has denied access to Bluetooth","            \/\/ Handle error ...","            break","        case .ERROR_BLUETOOTH_DISABLED, .ERROR_BLUETOOTH_UNAVAILABLE:","            \/\/ Bluetooth is disabled or not available","            \/\/ Handle error...        ","            break","        default:","            \/\/ Other error ...","            break","        }","    }","","    func onScannerStarted(","        _ sender: NixUniversalSDK.IDeviceScanner","    ) {","        \/\/ ...","    }","","    func onScannerStopped(","        _ sender: NixUniversalSDK.IDeviceScanner","    ) {","        \/\/ ...","    }","","    \/\/ MARK: DeviceScanner","    func startSearch {","        let callback: DeviceFoundCallback = { device in","            if let device {","                \/\/ Nearby device found","                \/\/ Handle discovery here ...","","                \/\/ Valid to query some parameters now:","                print(\"Found \\(device.name) with id \\(device.id) at RSSI \\(device.rssi)\")","            }","        }","        let newState: DeviceScannerState = scanner?.start(closure: callback)","    }","}"]},{"level":4,"type":"heading","anchor":"Objective-C-example","text":"Objective-C example"},{"inlineContent":[{"text":"TBD","type":"text"}],"type":"paragraph"},{"type":"heading","anchor":"Next-steps","level":2,"text":"Next steps"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","type":"reference","isActive":true}]}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/discovering-connecting"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/discovering-connecting"]}],"metadata":{"roleHeading":"Article","modules":[{"name":"NixUniversalSDK"}],"role":"article","title":"Discovering and Connecting to Nix Devices"},"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/interfaceType":{"abstract":[{"text":"Interface \/ connection type for this device","type":"text"}],"required":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/interfaceType","title":"interfaceType","kind":"symbol","role":"symbol","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"interfaceType","kind":"identifier"},{"kind":"text","text":": "},{"text":"InterfaceType","preciseIdentifier":"c:@M@NixUniversalSDK@E@InterfaceType","kind":"typeIdentifier"}],"navigatorTitle":[{"text":"interfaceType","kind":"identifier"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/interfacetype"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate":{"title":"ScannerStateDelegate","role":"symbol","navigatorTitle":[{"text":"ScannerStateDelegate","kind":"identifier"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"text":"ScannerStateDelegate","kind":"identifier"}],"abstract":[{"type":"text","text":"Protocol definition for a callback to be invoked when an "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","isActive":true,"type":"reference"},{"text":" starts or stops a search.","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/rssi":{"abstract":[{"type":"text","text":"Signal strength for this device"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/rssi","title":"rssi","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/rssi","kind":"symbol","required":true,"navigatorTitle":[{"kind":"identifier","text":"rssi"}],"fragments":[{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"rssi","kind":"identifier"},{"text":": ","kind":"text"},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"}],"type":"topic","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner":{"kind":"symbol","role":"symbol","url":"\/documentation\/nixuniversalsdk\/devicescanner","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"text":"DeviceScanner","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DeviceScanner"}],"abstract":[{"type":"text","text":"Class used to discover nearby Nix devices"}],"title":"DeviceScanner"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat":{"url":"\/documentation\/nixuniversalsdk\/idevicecompat","title":"IDeviceCompat","navigatorTitle":[{"kind":"identifier","text":"IDeviceCompat"}],"abstract":[{"type":"text","text":"Protocol describing the supported properties and methods for a Nix device. "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat","type":"reference","isActive":true},{"type":"text","text":" objects are found nearby using the "},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner","type":"reference"},{"text":".","type":"text"}],"kind":"symbol","role":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"IDeviceCompat"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/example-apps":{"abstract":[{"text":"Explore source code for demo iOS and macOS applications","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","title":"Example Applications","kind":"article","role":"article","type":"topic","url":"\/documentation\/nixuniversalsdk\/example-apps"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager":{"title":"LicenseManager","url":"\/documentation\/nixuniversalsdk\/licensemanager","abstract":[{"type":"text","text":"Class used to manage the license for the Nix Universal SDK. Members of this class are not instantiated or accessed directly. Access to a single shared instance is provided via static methods and properties."}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"LicenseManager"}],"navigatorTitle":[{"text":"LicenseManager","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner/DEFAULT_GENERAL_SCAN_PERIOD_MS":{"role":"symbol","abstract":[{"type":"text","text":"Scan period in milliseconds (20000) used when no time period is provided to "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)","isActive":true,"type":"reference"}],"type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/devicescanner\/default_general_scan_period_ms","title":"DEFAULT_GENERAL_SCAN_PERIOD_MS","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DEFAULT_GENERAL_SCAN_PERIOD_MS"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/activating-license":{"url":"\/documentation\/nixuniversalsdk\/activating-license","abstract":[{"text":"Enable Nix device functions with your license code","type":"text"}],"kind":"article","role":"article","title":"Activating the SDK License","type":"topic","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/release-notes":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","type":"topic","title":"Release Notes","kind":"article","abstract":[{"type":"text","text":"Review the changes made in this version of the library"}],"role":"article","url":"\/documentation\/nixuniversalsdk\/release-notes"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate/onScannerInit(_:state:)":{"title":"onScannerInit(_:state:)","abstract":[{"text":"Called when the ","type":"text"},{"code":"IDeviceScanner","type":"codeVoice"},{"type":"text","text":" has initialized. Check "},{"type":"codeVoice","code":"state"},{"type":"text","text":" to determine success or failure code."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerInit(_:state:)","required":true,"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"onScannerInit","kind":"identifier"},{"text":"(","kind":"text"},{"preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IDeviceScanner","text":"IDeviceScanner","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"state"},{"text":": ","kind":"text"},{"text":"DeviceScannerState","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState"},{"text":")","kind":"text"}],"role":"symbol","kind":"symbol","type":"topic","navigatorTitle":[{"text":"onScannerInit:state:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate\/onscannerinit(_:state:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManagerState/ACTIVE":{"abstract":[{"text":"The license has activated successfully and Nix Universal SDK functions are available.","type":"text"}],"navigatorTitle":[{"text":"LicenseManagerStateACTIVE","kind":"identifier"}],"kind":"symbol","title":"LicenseManagerState.ACTIVE","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ACTIVE"}],"type":"topic","url":"\/documentation\/nixuniversalsdk\/licensemanagerstate\/active","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScanner/DEFAULT_SINGLE_DEVICE_PERIOD_MS":{"type":"topic","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_SINGLE_DEVICE_PERIOD_MS","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"let","kind":"keyword"},{"text":" ","kind":"text"},{"text":"DEFAULT_SINGLE_DEVICE_PERIOD_MS","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Si","text":"Int","kind":"typeIdentifier"}],"url":"\/documentation\/nixuniversalsdk\/devicescanner\/default_single_device_period_ms","abstract":[{"type":"text","text":"Scan period in milliseconds (10000) used when no time period is provided to "},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)","isActive":true,"type":"reference"}],"kind":"symbol","title":"DEFAULT_SINGLE_DEVICE_PERIOD_MS"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScannerState/IDLE":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/devicescannerstate\/idle","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IDLE"}],"navigatorTitle":[{"text":"DeviceScannerStateIDLE","kind":"identifier"}],"title":"DeviceScannerState.IDLE","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/IDLE","role":"symbol","abstract":[{"text":"Bluetooth scanner is not actively searching for devices.","type":"text"}],"kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/allowedDeviceTypes-4f98s":{"title":"allowedDeviceTypes","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"allowedDeviceTypes"},{"text":": ","kind":"text"},{"text":"Set","kind":"typeIdentifier","preciseIdentifier":"s:Sh"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceType","text":"DeviceType"},{"text":">","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/allowedDeviceTypes-4f98s","url":"\/documentation\/nixuniversalsdk\/licensemanager\/alloweddevicetypes-4f98s","type":"topic","abstract":[{"text":"Set of device types supported by the current license. Available in Swift only.","type":"text"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceFoundCallback":{"url":"\/documentation\/nixuniversalsdk\/devicefoundcallback","title":"DeviceFoundCallback","role":"symbol","abstract":[{"type":"text","text":"Definition for a closure invoked when an "},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner"},{"type":"text","text":" has discovered a supported Nix device"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceFoundCallback","kind":"symbol","type":"topic","navigatorTitle":[{"text":"DeviceFoundCallback","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"typealias"},{"text":" ","kind":"text"},{"kind":"identifier","text":"DeviceFoundCallback"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/startSearchForId(_:closure:)":{"required":true,"navigatorTitle":[{"kind":"identifier","text":"startSearchForId:withClosure:"}],"title":"startSearchForId(_:closure:)","kind":"symbol","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"startSearchForId","kind":"identifier"},{"kind":"text","text":"("},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"closure","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:15NixUniversalSDK19DeviceFoundCallbacka","text":"DeviceFoundCallback","kind":"typeIdentifier"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState","text":"DeviceScannerState"}],"abstract":[{"text":"Starts a search for a specific Nix device using Bluetooth. The search will run until the specified device is found, or until ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_SINGLE_DEVICE_PERIOD_MS","type":"reference"},{"type":"text","text":" elapses, whichever is shorter. Invoked with a "},{"code":"nil","type":"codeVoice"},{"text":" result when a search times out and device was not found.","type":"text"}],"url":"\/documentation\/nixuniversalsdk\/idevicescanner\/startsearchforid(_:closure:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/startSearchForId(_:closure:)","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/DeviceScannerState/ERROR_LICENSE":{"navigatorTitle":[{"text":"DeviceScannerStateERROR_LICENSE","kind":"identifier"}],"title":"DeviceScannerState.ERROR_LICENSE","fragments":[{"text":"case","kind":"keyword"},{"kind":"text","text":" "},{"text":"ERROR_LICENSE","kind":"identifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScannerState\/ERROR_LICENSE","url":"\/documentation\/nixuniversalsdk\/devicescannerstate\/error_license","type":"topic","abstract":[{"text":"Bluetooth scanner could not start due to a problem with the ","type":"text"},{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true,"type":"reference"},{"text":". Check ","type":"text"},{"isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","type":"reference"},{"text":" for details.","type":"text"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/name":{"navigatorTitle":[{"kind":"identifier","text":"name"}],"title":"name","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"name","kind":"identifier"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/name","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/name","type":"topic","required":true,"abstract":[{"text":"Name for this device","type":"text"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicescanner","abstract":[{"text":"Protocol implemented by the ","type":"text"},{"isActive":true,"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner"}],"title":"IDeviceScanner","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner","fragments":[{"kind":"keyword","text":"protocol"},{"text":" ","kind":"text"},{"kind":"identifier","text":"IDeviceScanner"}],"navigatorTitle":[{"text":"IDeviceScanner","kind":"identifier"}],"kind":"symbol","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/add-to-xcode":{"kind":"article","title":"Adding to Your Xcode Project","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","url":"\/documentation\/nixuniversalsdk\/add-to-xcode","type":"topic","abstract":[{"text":"Add the library bundle to your project and declare peripheral uses","type":"text"}],"role":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ScannerStateDelegate/onScannerStopped(_:)":{"navigatorTitle":[{"kind":"identifier","text":"onScannerStopped:"}],"title":"onScannerStopped(_:)","fragments":[{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"onScannerStopped"},{"kind":"text","text":"("},{"preciseIdentifier":"c:@M@NixUniversalSDK@objc(pl)IDeviceScanner","text":"IDeviceScanner","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ScannerStateDelegate\/onScannerStopped(_:)","url":"\/documentation\/nixuniversalsdk\/scannerstatedelegate\/onscannerstopped(_:)","type":"topic","required":true,"abstract":[{"text":"Called when an ","type":"text"},{"type":"codeVoice","code":"IDeviceScanner"},{"text":" has stopped searching","type":"text"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/handling-measurements":{"kind":"article","title":"Handling Measurement Data","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","url":"\/documentation\/nixuniversalsdk\/handling-measurements","type":"topic","abstract":[{"text":"Query measurement values including colorimetry, spectral reflectance, and density","type":"text"}],"role":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/device-operations":{"abstract":[{"type":"text","text":"Take measurements, set device options, and query device properties"}],"url":"\/documentation\/nixuniversalsdk\/device-operations","kind":"article","title":"Device Operations","type":"topic","role":"article","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"abstract":[{"text":"A library to allow integration of Nix devices into third-party iOS and macOS applications.","type":"text"}],"type":"topic","role":"collection","title":"NixUniversalSDK","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/stop()":{"fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"kind":"symbol","navigatorTitle":[{"text":"stop","kind":"identifier"}],"type":"topic","abstract":[{"text":"Stops a Bluetooth search if one is currently running.","type":"text"}],"required":true,"url":"\/documentation\/nixuniversalsdk\/idevicescanner\/stop()","role":"symbol","title":"stop()","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/stop()"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/wrapper":{"title":"Wrapper for Usage in C\/C++","url":"\/documentation\/nixuniversalsdk\/wrapper","abstract":[{"text":"Review an example project which provides a C\/C++ interface on macOS","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper","type":"topic","kind":"article","role":"article"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/LicenseManager/state":{"role":"symbol","type":"topic","abstract":[{"text":"Describes the current state of the  ","type":"text"},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager","isActive":true},{"type":"text","text":". Nix Universal SDK functions are available only if license is active (i.e. - the state is "},{"type":"reference","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManagerState\/ACTIVE","isActive":true},{"text":")","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"var","kind":"keyword"},{"kind":"text","text":" "},{"text":"state","kind":"identifier"},{"text":": ","kind":"text"},{"text":"LicenseManagerState","kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@LicenseManagerState"}],"url":"\/documentation\/nixuniversalsdk\/licensemanager\/state","kind":"symbol","navigatorTitle":[{"text":"state","kind":"identifier"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/LicenseManager\/state","title":"state"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/type":{"type":"topic","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/type","fragments":[{"text":"var","kind":"keyword"},{"text":" ","kind":"text"},{"text":"type","kind":"identifier"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"DeviceType","preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceType"}],"navigatorTitle":[{"kind":"identifier","text":"type"}],"title":"type","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/type","role":"symbol","required":true,"abstract":[{"text":"Type for this device","type":"text"}],"kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceScanner/start(scanPeriodMs:closure:)":{"required":true,"url":"\/documentation\/nixuniversalsdk\/idevicescanner\/start(scanperiodms:closure:)","navigatorTitle":[{"text":"startForPeriodMs:withClosure:","kind":"identifier"}],"abstract":[{"type":"text","text":"Starts a search for nearby Nix devices using Bluetooth for a selected time interval. If no timeout interval is specified, the search will run for "},{"type":"reference","isActive":true,"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/DeviceScanner\/DEFAULT_GENERAL_SCAN_PERIOD_MS"},{"type":"text","text":"."}],"type":"topic","role":"symbol","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"start","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"scanPeriodMs"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":", ","kind":"text"},{"text":"closure","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DeviceFoundCallback","kind":"typeIdentifier","preciseIdentifier":"s:15NixUniversalSDK19DeviceFoundCallbacka"},{"kind":"text","text":") -> "},{"preciseIdentifier":"c:@M@NixUniversalSDK@E@DeviceScannerState","text":"DeviceScannerState","kind":"typeIdentifier"}],"title":"start(scanPeriodMs:closure:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceScanner\/start(scanPeriodMs:closure:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/IDeviceCompat/id":{"abstract":[{"text":"Unique identifier for this device","type":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/IDeviceCompat\/id","title":"id","url":"\/documentation\/nixuniversalsdk\/idevicecompat\/id","kind":"symbol","required":true,"navigatorTitle":[{"text":"id","kind":"identifier"}],"fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"text":"id","kind":"identifier"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"}],"type":"topic","role":"symbol"}},"variantOverrides":[{"traits":[{"interfaceLanguage":"occ"}],"patch":[{"op":"replace","path":"\/identifier\/interfaceLanguage","value":"occ"},{"op":"add","path":"\/topicSections","value":null},{"op":"replace","value":[{"generated":true,"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/release-notes","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/add-to-xcode","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/activating-license","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/device-operations","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/handling-measurements","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/example-apps","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/wrapper"],"title":"Getting Started","anchor":"Getting-Started"}],"path":"\/seeAlsoSections"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1interfaceType\/title","op":"replace","value":"interfaceType"},{"op":"replace","value":[{"text":"interfaceType","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1interfaceType\/fragments"},{"value":"ScannerStateDelegate","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/fragments","op":"replace","value":[{"text":"ScannerStateDelegate","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate\/navigatorTitle","value":[{"text":"ScannerStateDelegate","kind":"identifier"}],"op":"replace"},{"value":"rssi","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rssi\/title","op":"replace"},{"value":[{"kind":"identifier","text":"rssi"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1rssi\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/title","value":"DeviceScanner","op":"replace"},{"value":[{"text":"DeviceScanner","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/fragments","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScanner\/navigatorTitle","op":"replace","value":[{"text":"DeviceScanner","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/title","value":"IDeviceCompat","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/fragments","value":[{"text":"IDeviceCompat","kind":"identifier"}]},{"value":[{"text":"IDeviceCompat","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat\/navigatorTitle"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/title","op":"replace","value":"LicenseManager"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/fragments","value":[{"text":"LicenseManager","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager\/navigatorTitle","value":[{"text":"LicenseManager","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerInit(_:state:)\/title","value":"onScannerInit:state:"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerInit(_:state:)\/fragments","value":[{"text":"- ","kind":"text"},{"text":"onScannerInit:state:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManagerState~1ACTIVE\/title","op":"replace","value":"LicenseManagerStateACTIVE"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManagerState~1ACTIVE\/fragments","value":[{"text":"LicenseManagerStateACTIVE","kind":"identifier"}]},{"value":"DeviceScannerStateIDLE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1IDLE\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1IDLE\/fragments","value":[{"text":"DeviceScannerStateIDLE","kind":"identifier"}]},{"op":"replace","value":"startSearchForId:withClosure:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1startSearchForId(_:closure:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1startSearchForId(_:closure:)\/fragments","value":[{"kind":"text","text":"- "},{"text":"startSearchForId:withClosure:","kind":"identifier"}],"op":"replace"},{"value":"DeviceScannerStateERROR_LICENSE","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1ERROR_LICENSE\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1DeviceScannerState~1ERROR_LICENSE\/fragments","value":[{"text":"DeviceScannerStateERROR_LICENSE","kind":"identifier"}],"op":"replace"},{"value":"name","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1name\/title"},{"value":[{"text":"name","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1name\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/title","value":"IDeviceScanner"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/fragments","value":[{"text":"IDeviceScanner","kind":"identifier"}],"op":"replace"},{"value":[{"kind":"identifier","text":"IDeviceScanner"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner\/navigatorTitle"},{"value":"onScannerStopped:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerStopped(_:)\/title","op":"replace"},{"value":[{"kind":"text","text":"- "},{"kind":"identifier","text":"onScannerStopped:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ScannerStateDelegate~1onScannerStopped(_:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/title","value":"stop"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1stop()\/fragments","value":[{"text":"- ","kind":"text"},{"text":"stop","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/title","value":"state","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1LicenseManager~1state\/fragments","op":"replace","value":[{"text":"state","kind":"identifier"}]},{"op":"replace","value":"type","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1type\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1type\/fragments","op":"replace","value":[{"text":"type","kind":"identifier"}]},{"value":"startForPeriodMs:withClosure:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1start(scanPeriodMs:closure:)\/title","op":"replace"},{"op":"replace","value":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"startForPeriodMs:withClosure:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceScanner~1start(scanPeriodMs:closure:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1id\/title","value":"id"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1IDeviceCompat~1id\/fragments","value":[{"text":"id","kind":"identifier"}],"op":"replace"}]}]}