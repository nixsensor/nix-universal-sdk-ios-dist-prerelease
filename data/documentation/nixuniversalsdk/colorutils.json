{"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject"],"kind":"relationships"},{"type":"conformsTo","identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(pl)NSObject","doc:\/\/com.nixsensor.universalsdk\/s7CVarArgP","doc:\/\/com.nixsensor.universalsdk\/s28CustomDebugStringConvertibleP","doc:\/\/com.nixsensor.universalsdk\/s23CustomStringConvertibleP","doc:\/\/com.nixsensor.universalsdk\/SQ","doc:\/\/com.nixsensor.universalsdk\/SH"],"title":"Conforms To","kind":"relationships"}],"schemaVersion":{"major":0,"minor":3,"patch":0},"abstract":[{"type":"text","text":"Color math utility functions"}],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"text":"ColorUtils","kind":"identifier"}],"platforms":["macOS"],"languages":["swift"]}],"kind":"declarations"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/nixuniversalsdk\/colorutils"]},{"traits":[{"interfaceLanguage":"occ"}],"paths":["\/documentation\/nixuniversalsdk\/colorutils"]}],"hierarchy":{"paths":[["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK"]]},"kind":"symbol","sections":[],"metadata":{"fragments":[{"text":"class","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"ColorUtils"}],"navigatorTitle":[{"kind":"identifier","text":"ColorUtils"}],"externalID":"c:@M@NixUniversalSDK@objc(cs)ColorUtils","symbolKind":"class","roleHeading":"Class","role":"symbol","title":"ColorUtils","modules":[{"name":"NixUniversalSDK"}]},"identifier":{"url":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils","interfaceLanguage":"swift"},"topicSections":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)"],"generated":true,"title":"Type Methods","anchor":"Type-Methods"}],"references":{"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)":{"kind":"symbol","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"xyzToCmyk"},{"kind":"text","text":"("},{"text":"xyzIn","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"], ","kind":"text"},{"text":"xyzRef","kind":"externalParam"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"bpc"},{"text":": ","kind":"text"},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"kind":"text","text":", "},{"kind":"externalParam","text":"m"},{"kind":"text","text":": [["},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":"]], "},{"kind":"externalParam","text":"inputCurves"},{"kind":"text","text":": [["},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"text":"]], ","kind":"text"},{"text":"clut","kind":"externalParam"},{"text":": [[","kind":"text"},{"preciseIdentifier":"s:Si","kind":"typeIdentifier","text":"Int"},{"text":"]], ","kind":"text"},{"text":"outputCurves","kind":"externalParam"},{"text":": [[","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"]]) -> [","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":"]","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztocmyk(xyzin:xyzref:bpc:m:inputcurves:clut:outputcurves:)","title":"xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","navigatorTitle":[{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","kind":"identifier"}],"abstract":[{"type":"text","text":"Calculates CMYK value from XYZ using lookup tables provided as "},{"type":"codeVoice","code":"inputCurves"},{"text":" arguments","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/adaptXyz(xyzIn:refIn:refOut:)":{"type":"topic","kind":"symbol","abstract":[{"text":"Adapts colour in XYZ from one reference white to another using Bradford adaptation method. NOTE: ","type":"text"},{"type":"codeVoice","code":"refIn"},{"text":", ","type":"text"},{"type":"codeVoice","code":"refOut"},{"type":"text","text":", "},{"type":"codeVoice","code":"xyzIn"},{"type":"text","text":" must all be on the same scale."}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"adaptXyz"},{"kind":"text","text":"("},{"text":"xyzIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"refIn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"refOut","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">"}],"navigatorTitle":[{"text":"adaptXyzWithXyzIn:refIn:refOut:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/adaptxyz(xyzin:refin:refout:)","title":"adaptXyz(xyzIn:refIn:refOut:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)"},"doc://com.nixsensor.universalsdk/s7CVarArgP":{"title":"Swift.CVarArg","type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/s7CVarArgP"},"doc://com.nixsensor.universalsdk/objc(cs)NSObject":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject","title":"NSObject","type":"unresolvable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94T(lab1:lab2:)":{"abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula for the textiles application (","type":"text"},{"code":"kL","type":"codeVoice"},{"type":"text","text":" = 2, "},{"type":"codeVoice","code":"k1"},{"text":" = 0.048, ","type":"text"},{"type":"codeVoice","code":"k2"},{"type":"text","text":" = 0.014). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"title":"deltaE94T(lab1:lab2:)","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","type":"topic","role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deltaE94T","kind":"identifier"},{"text":"(","kind":"text"},{"text":"lab1","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"lab2","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"kind":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94t(lab1:lab2:)","navigatorTitle":[{"kind":"identifier","text":"deltaE94TWithLab1:lab2:"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaECmc(lab1:lab2:l:c:)":{"abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CMC(l:c) formula. Depends on model parameters l and c; common values used are CMC(2:1) for acceptability and CMC(1:1) for perceptibility. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE","type":"text"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deltaECmc","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab1"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"lab2"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"l","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":", ","kind":"text"},{"text":"c","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":") -> "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/deltaecmc(lab1:lab2:l:c:)","type":"topic","title":"deltaECmc(lab1:lab2:l:c:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","navigatorTitle":[{"kind":"identifier","text":"deltaECmcWithLab1:lab2:l:c:"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94(lab1:lab2:kL:k1:k2:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula. Requires weighting factors kL, k1, and k2 which are dependent on application. Use the "},{"code":"deltaE94G","type":"codeVoice"},{"type":"text","text":" method for graphic design applications and the "},{"type":"codeVoice","code":"deltaE94T"},{"type":"text","text":" for textile applications. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"deltaE94","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lab1"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"kL","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"k1","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"k2"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"}],"navigatorTitle":[{"text":"deltaE94WithLab1:lab2:kL:k1:k2:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94(lab1:lab2:kl:k1:k2:)","title":"deltaE94(lab1:lab2:kL:k1:k2:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE76(lab1:lab2:)":{"abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1976 formula. Both CIELAB values must share the same reference white. If they do not, convert to XYZ, adapt, convert back to CIELAB before calculating dE","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"deltaE76"},{"kind":"text","text":"("},{"text":"lab1","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae76(lab1:lab2:)","type":"topic","title":"deltaE76(lab1:lab2:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","navigatorTitle":[{"text":"deltaE76WithLab1:lab2:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)":{"kind":"symbol","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztorgb(xyzin:refin:rchrom:gchrom:bchrom:wchrom:)","abstract":[{"type":"text","text":"Calculates linear RGB from XYZ given chromaticity coordinates of RGB working space primaries and reference whites of RGB and XYZ value"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","role":"symbol","title":"xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"xyzToRgb"},{"text":"(","kind":"text"},{"text":"xyzIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"refIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"rChrom"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"gChrom"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"bChrom","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"wChrom","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">","kind":"text"}],"navigatorTitle":[{"text":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE00(lab1:lab2:kL:kC:kH:)":{"abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula. Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"navigatorTitle":[{"text":"deltaE00WithLab1:lab2:kL:kC:kH:","kind":"identifier"}],"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"deltaE00","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab1"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lab2"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">, "},{"text":"kL","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":", "},{"text":"kC","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":", "},{"text":"kH","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"type":"topic","title":"deltaE00(lab1:lab2:kL:kC:kH:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:kl:kc:kh:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/labToXyz(lab:xyzRef:)":{"role":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/labtoxyz(lab:xyzref:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"labToXyz"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">) -> ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">","kind":"text"}],"title":"labToXyz(lab:xyzRef:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","type":"topic","navigatorTitle":[{"kind":"identifier","text":"labToXyzWithLab:xyzRef:"}],"abstract":[{"text":"Takes CIELAB value and its reference white to calculate CIEXYZ value","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToSrgb(xyzIn:refIn:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Calculates companded sRGB value from XYZ given reference white of XYZ value"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"xyzToSrgb"},{"kind":"text","text":"("},{"text":"xyzIn","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"refIn","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"text":">","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"xyzToSrgbWithXyzIn:refIn:"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztosrgb(xyzin:refin:)","title":"xyzToSrgb(xyzIn:refIn:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/cmykToXyz(cmykIn:refOut:bpc:)":{"abstract":[{"type":"text","text":"Calculates XYZ value from CMYK input using built-in lookup tables"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"cmykToXyz"},{"kind":"text","text":"("},{"text":"cmykIn","kind":"externalParam"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"], ","kind":"text"},{"kind":"externalParam","text":"refOut"},{"text":": [","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":"], ","kind":"text"},{"text":"bpc","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sb","text":"Bool"},{"kind":"text","text":") -> ["},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/cmyktoxyz(cmykin:refout:bpc:)","type":"topic","title":"cmykToXyz(cmykIn:refOut:bpc:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","navigatorTitle":[{"kind":"identifier","text":"cmykToXyzWithCmykIn:refOut:bpc:"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/luvToLch(luvIn:)":{"kind":"symbol","abstract":[{"text":"Takes CIELUV value and converts to polar coordinates (LCH)","type":"text"}],"title":"luvToLch(luvIn:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"luvToLch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"luvIn"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/luvtolch(luvin:)","role":"symbol","type":"topic","navigatorTitle":[{"text":"luvToLchWithLuvIn:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/lchToLuv(lchIn:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lchToLuv"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lchIn"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"title":"lchToLuv(lchIn:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/lchtoluv(lchin:)","type":"topic","role":"symbol","navigatorTitle":[{"kind":"identifier","text":"lchToLuvWithLchIn:"}],"kind":"symbol","abstract":[{"text":"Takes LCHuv value and converts to CIELUV","type":"text"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/spectral10ToDensity(lambda:reflectance:status:)":{"abstract":[{"type":"text","text":"Takes reflectance data on 10 nm intervals and calculates CMYK densities according to ISO 5-3:2009. Data must be provided on 10 nm intervals corresponding to the nearest 10 nanometer. Density values are calculated across the range 340 - 770 nm. If the provided data spans a shorter range (eg - 400 - 700 nm), the values at the boundaries are repeated."}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","title":"spectral10ToDensity(lambda:reflectance:status:)","role":"symbol","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/spectral10todensity(lambda:reflectance:status:)","navigatorTitle":[{"text":"spectral10ToDensityWithLambda:reflectance:status:","kind":"identifier"}],"type":"topic","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"spectral10ToDensity"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lambda"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Si","text":"Int"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"reflectance"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"text":"<","kind":"text"},{"text":"Float","preciseIdentifier":"s:Sf","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"status","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"c:@M@NixUniversalSDK@E@DensityStatus","text":"DensityStatus"},{"text":") -> ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}]},"doc://com.nixsensor.universalsdk/SH":{"type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/SH","title":"Swift.Hashable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/sRgbToXyz(sRgb:refOut:)":{"title":"sRgbToXyz(sRgb:refOut:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/srgbtoxyz(srgb:refout:)","navigatorTitle":[{"text":"sRgbToXyzWithSRgb:refOut:","kind":"identifier"}],"abstract":[{"text":"Calculates XYZ from sRGB value.","type":"text"}],"type":"topic","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"sRgbToXyz"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"sRgb"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"refOut"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">) -> ","kind":"text"},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">","kind":"text"}],"kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/spectral10ToXyz(lambda:reflectance:illuminant:observer:)":{"role":"symbol","abstract":[{"type":"text","text":"Takes reflectance data on 10 nm intervals and calculates a CIEXYZ value according to ASTM E308. Data must be provided on 10 nm intervals corresponding to the nearest 10 nanometer. CIEXYZ values are calculated across the range 360 - 780 nm. If the provided data spans a shorter range (eg - 400 - 700 nm), the values at the boundaries are repeated."}],"title":"spectral10ToXyz(lambda:reflectance:illuminant:observer:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/spectral10toxyz(lambda:reflectance:illuminant:observer:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"spectral10ToXyz"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lambda"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"kind":"text","text":">, "},{"text":"reflectance","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sf","text":"Float"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"illuminant"},{"text":": ","kind":"text"},{"text":"Illuminant","preciseIdentifier":"c:@M@NixUniversalSDK@E@Illuminant","kind":"typeIdentifier"},{"kind":"text","text":", "},{"text":"observer","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Observer","preciseIdentifier":"c:@M@NixUniversalSDK@E@Observer"},{"text":") -> ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","navigatorTitle":[{"kind":"identifier","text":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:"}],"type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE00(lab1:lab2:)":{"abstract":[{"type":"text","text":"Takes two CIELAB values and calculates color difference (dE) using CIE2000 formula using default model parameters (kL = kC = kH = 1.0). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"deltaE00","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"lab1"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"text":"lab2","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae00(lab1:lab2:)","type":"topic","title":"deltaE00(lab1:lab2:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","navigatorTitle":[{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/clipXyz(xyz:xyzRef:)":{"role":"symbol","abstract":[{"text":"Clips CIEXYZ values in between 0 and the value of the reference white to ensure X,Y,Z are in the proper range.","type":"text"}],"title":"clipXyz(xyz:xyzRef:)","url":"\/documentation\/nixuniversalsdk\/colorutils\/clipxyz(xyz:xyzref:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"clipXyz"},{"kind":"text","text":"("},{"text":"xyz","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">","kind":"text"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","navigatorTitle":[{"kind":"identifier","text":"clipXyzWithXyz:xyzRef:"}],"type":"topic","kind":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/labToLch(labIn:)":{"abstract":[{"type":"text","text":"Takes CIELAB value and converts to polar coordinates (LCH)"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"kind":"identifier","text":"labToLch"},{"kind":"text","text":"("},{"kind":"externalParam","text":"labIn"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","text":"Double","preciseIdentifier":"s:Sd"},{"text":">","kind":"text"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/labtolch(labin:)","type":"topic","title":"labToLch(labIn:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","navigatorTitle":[{"kind":"identifier","text":"labToLchWithLabIn:"}]},"doc://com.nixsensor.universalsdk/s23CustomStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/s23CustomStringConvertibleP","title":"Swift.CustomStringConvertible"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/lchToLab(lchIn:)":{"abstract":[{"type":"text","text":"Takes LCHab value and converts to CIELAB"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"lchToLab"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lchIn"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">","kind":"text"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/lchtolab(lchin:)","type":"topic","title":"lchToLab(lchIn:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","navigatorTitle":[{"kind":"identifier","text":"lchToLabWithLchIn:"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/luvToXyz(luvIn:xyzRef:)":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","title":"luvToXyz(luvIn:xyzRef:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"kind":"identifier","text":"luvToXyz"},{"kind":"text","text":"("},{"kind":"externalParam","text":"luvIn"},{"text":": ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":">"}],"navigatorTitle":[{"text":"luvToXyzWithLuvIn:xyzRef:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/luvtoxyz(luvin:xyzref:)","kind":"symbol","abstract":[{"type":"text","text":"Takes CIELUV value and its reference white to calculate CIEXYZ value"}],"role":"symbol","type":"topic"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToCmyk(xyzIn:xyzRef:bpc:)":{"kind":"symbol","type":"topic","abstract":[{"text":"Calculates CMYK value from XYZ input using built in lookup tables","type":"text"}],"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"xyzToCmyk"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"xyzIn"},{"kind":"text","text":": ["},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":"], "},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"bpc","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Bool","kind":"typeIdentifier","preciseIdentifier":"s:Sb"},{"text":") -> [","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":"]","kind":"text"}],"navigatorTitle":[{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztocmyk(xyzin:xyzref:bpc:)","title":"xyzToCmyk(xyzIn:xyzRef:bpc:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)"},"doc://com.nixsensor.universalsdk/SQ":{"identifier":"doc:\/\/com.nixsensor.universalsdk\/SQ","type":"unresolvable","title":"Swift.Equatable"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils":{"url":"\/documentation\/nixuniversalsdk\/colorutils","abstract":[{"text":"Color math utility functions","type":"text"}],"kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"ColorUtils"}],"role":"symbol","title":"ColorUtils","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils","fragments":[{"kind":"keyword","text":"class"},{"text":" ","kind":"text"},{"kind":"identifier","text":"ColorUtils"}]},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToLab(xyz:xyzRef:)":{"abstract":[{"type":"text","text":"Takes CIEXYZ value and its reference white to calculate CIELAB value. "},{"code":"xyz","type":"codeVoice"},{"type":"text","text":" and "},{"type":"codeVoice","code":"xyzRef"},{"text":" can be either unity (0 - 1) or scaled (0 - 100) input, but both vectors must be the same scale; if ","type":"text"},{"type":"codeVoice","code":"xyz"},{"text":" is unity scale, ","type":"text"},{"type":"codeVoice","code":"xyzRef"},{"type":"text","text":" must also be unity scale"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"xyzToLab","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"xyz"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"text":"xyzRef","kind":"externalParam"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">) -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztolab(xyz:xyzref:)","type":"topic","title":"xyzToLab(xyz:xyzRef:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","navigatorTitle":[{"text":"xyzToLabWithXyz:xyzRef:","kind":"identifier"}]},"doc://com.nixsensor.universalsdk/objc(pl)NSObject":{"type":"unresolvable","title":"ObjectiveC.NSObjectProtocol","identifier":"doc:\/\/com.nixsensor.universalsdk\/objc(pl)NSObject"},"doc://com.nixsensor.universalsdk/s28CustomDebugStringConvertibleP":{"type":"unresolvable","identifier":"doc:\/\/com.nixsensor.universalsdk\/s28CustomDebugStringConvertibleP","title":"Swift.CustomDebugStringConvertible"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/deltaE94G(lab1:lab2:)":{"abstract":[{"text":"Takes two CIELAB values and calculates color difference (dE) using CIE1994 formula for the graphic design application (","type":"text"},{"code":"kL","type":"codeVoice"},{"text":" = 1, ","type":"text"},{"type":"codeVoice","code":"k1"},{"text":" = 0.045, ","type":"text"},{"type":"codeVoice","code":"k2"},{"type":"text","text":" = 0.015). Both CIELAB values must share the same reference white. If they do not: convert to XYZ, adapt, convert back to CIELAB before calculating dE."}],"navigatorTitle":[{"text":"deltaE94GWithLab1:lab2:","kind":"identifier"}],"kind":"symbol","title":"deltaE94G(lab1:lab2:)","type":"topic","url":"\/documentation\/nixuniversalsdk\/colorutils\/deltae94g(lab1:lab2:)","fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"text":"deltaE94G","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"lab1"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"lab2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":">) -> "},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)":{"type":"topic","kind":"symbol","abstract":[{"type":"text","text":"Calculates XYZ from linear RGB given chromaticity coordinates of RGB working space primaries and reference whites of RGB and XYZ value."}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"rgbToXyz"},{"kind":"text","text":"("},{"kind":"externalParam","text":"rgbIn"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","text":"Array","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"rChrom"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"gChrom"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"kind":"text","text":">, "},{"kind":"externalParam","text":"bChrom"},{"kind":"text","text":": "},{"text":"Array","preciseIdentifier":"s:Sa","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"wChrom"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sa","kind":"typeIdentifier","text":"Array"},{"kind":"text","text":"<"},{"text":"Double","preciseIdentifier":"s:Sd","kind":"typeIdentifier"},{"kind":"text","text":">, "},{"text":"refOut","kind":"externalParam"},{"text":": ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"kind":"text","text":"<"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":">) -> ","kind":"text"},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"text":">","kind":"text"}],"navigatorTitle":[{"kind":"identifier","text":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/rgbtoxyz(rgbin:rchrom:gchrom:bchrom:wchrom:refout:)","title":"rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)":{"type":"topic","title":"cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","navigatorTitle":[{"kind":"identifier","text":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:"}],"fragments":[{"kind":"keyword","text":"static"},{"text":" ","kind":"text"},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"cmykToXyz","kind":"identifier"},{"kind":"text","text":"("},{"kind":"externalParam","text":"cmykIn"},{"kind":"text","text":": ["},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":"], ","kind":"text"},{"text":"refOut","kind":"externalParam"},{"kind":"text","text":": ["},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"], "},{"text":"bpc","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:Sb","text":"Bool","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"kind":"externalParam","text":"m"},{"kind":"text","text":": [["},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"input"},{"kind":"text","text":": [["},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"clut"},{"kind":"text","text":": [["},{"text":"Int","preciseIdentifier":"s:Si","kind":"typeIdentifier"},{"text":"]], ","kind":"text"},{"kind":"externalParam","text":"output"},{"text":": [[","kind":"text"},{"text":"Int","kind":"typeIdentifier","preciseIdentifier":"s:Si"},{"text":"]]) -> [","kind":"text"},{"preciseIdentifier":"s:Sd","text":"Double","kind":"typeIdentifier"},{"kind":"text","text":"]"}],"identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","kind":"symbol","url":"\/documentation\/nixuniversalsdk\/colorutils\/cmyktoxyz(cmykin:refout:bpc:m:input:clut:output:)","abstract":[{"type":"text","text":"Calculates XYZ value from CMYK input using lookup tables provided as input arguments"}],"role":"symbol"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK":{"role":"collection","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK","abstract":[{"text":"A library to allow integration of Nix devices into third-party iOS and macOS applications.","type":"text"}],"kind":"symbol","title":"NixUniversalSDK","type":"topic","url":"\/documentation\/nixuniversalsdk"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/init":{"kind":"symbol","type":"topic","abstract":[],"fragments":[{"text":"- ","kind":"text"},{"kind":"identifier","text":"init"}],"navigatorTitle":[{"text":"init","kind":"identifier"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/init","title":"init","role":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/init"},"doc://com.nixsensor.universalsdk/documentation/NixUniversalSDK/ColorUtils/xyzToLuv(xyzIn:xyzRef:)":{"abstract":[{"type":"text","text":"Takes CIEXYZ value and its reference white to calculate CIELUV value"}],"role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"xyzToLuv","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"xyzIn"},{"kind":"text","text":": "},{"text":"Array","kind":"typeIdentifier","preciseIdentifier":"s:Sa"},{"text":"<","kind":"text"},{"preciseIdentifier":"s:Sd","kind":"typeIdentifier","text":"Double"},{"text":">, ","kind":"text"},{"kind":"externalParam","text":"xyzRef"},{"kind":"text","text":": "},{"preciseIdentifier":"s:Sa","text":"Array","kind":"typeIdentifier"},{"kind":"text","text":"<"},{"text":"Double","kind":"typeIdentifier","preciseIdentifier":"s:Sd"},{"text":">) -> ","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sa","text":"Array"},{"text":"<","kind":"text"},{"kind":"typeIdentifier","preciseIdentifier":"s:Sd","text":"Double"},{"kind":"text","text":">"}],"url":"\/documentation\/nixuniversalsdk\/colorutils\/xyztoluv(xyzin:xyzref:)","type":"topic","title":"xyzToLuv(xyzIn:xyzRef:)","kind":"symbol","identifier":"doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","navigatorTitle":[{"kind":"identifier","text":"xyzToLuvWithXyzIn:xyzRef:"}]}},"variantOverrides":[{"patch":[{"path":"\/identifier\/interfaceLanguage","value":"occ","op":"replace"},{"op":"replace","value":"Class","path":"\/metadata\/roleHeading"},{"path":"\/metadata\/title","op":"replace","value":"ColorUtils"},{"op":"replace","value":"class","path":"\/metadata\/symbolKind"},{"value":[{"text":"ColorUtils","kind":"identifier"}],"op":"replace","path":"\/metadata\/fragments"},{"value":[{"kind":"identifier","text":"ColorUtils"}],"path":"\/metadata\/navigatorTitle","op":"replace"},{"value":[{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/init"],"generated":true,"anchor":"Instance-Methods","title":"Instance Methods"},{"identifiers":["doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/adaptXyz(xyzIn:refIn:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/clipXyz(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE00(lab1:lab2:kL:kC:kH:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE76(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94(lab1:lab2:kL:k1:k2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94G(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaE94T(lab1:lab2:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/deltaECmc(lab1:lab2:l:c:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToLch(labIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/labToXyz(lab:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLab(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/lchToLuv(lchIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToLch(luvIn:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/luvToXyz(luvIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/sRgbToXyz(sRgb:refOut:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToDensity(lambda:reflectance:status:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/spectral10ToXyz(lambda:reflectance:illuminant:observer:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLab(xyz:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToLuv(xyzIn:xyzRef:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)","doc:\/\/com.nixsensor.universalsdk\/documentation\/NixUniversalSDK\/ColorUtils\/xyzToSrgb(xyzIn:refIn:)"],"anchor":"Type-Methods","generated":true,"title":"Type Methods"}],"op":"replace","path":"\/topicSections"},{"op":"replace","path":"\/relationshipsSections","value":[{"type":"inheritsFrom","identifiers":["doc:\/\/com.nixsensor.universalsdk\/objc(cs)NSObject"],"title":"Inherits From","kind":"relationships"}]},{"value":null,"path":"\/seeAlsoSections","op":"add"},{"path":"\/primaryContentSections\/0","value":{"kind":"declarations","declarations":[{"languages":["occ"],"tokens":[{"kind":"keyword","text":"@interface"},{"text":" ","kind":"text"},{"text":"ColorUtils","kind":"identifier"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"c:objc(cs)NSObject","text":"NSObject"}],"platforms":["macOS"]}]},"op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)\/title","value":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","op":"replace"},{"op":"replace","value":[{"kind":"text","text":"+ "},{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:m:inputCurves:clut:outputCurves:)\/fragments"},{"value":"adaptXyzWithXyzIn:refIn:refOut:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1adaptXyz(xyzIn:refIn:refOut:)\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1adaptXyz(xyzIn:refIn:refOut:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"adaptXyzWithXyzIn:refIn:refOut:"}],"op":"replace"},{"value":"deltaE94TWithLab1:lab2:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94T(lab1:lab2:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94T(lab1:lab2:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE94TWithLab1:lab2:"}],"op":"replace"},{"op":"replace","value":"deltaECmcWithLab1:lab2:l:c:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaECmc(lab1:lab2:l:c:)\/title"},{"op":"replace","value":[{"kind":"text","text":"+ "},{"text":"deltaECmcWithLab1:lab2:l:c:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaECmc(lab1:lab2:l:c:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94(lab1:lab2:kL:k1:k2:)\/title","value":"deltaE94WithLab1:lab2:kL:k1:k2:"},{"value":[{"text":"+ ","kind":"text"},{"text":"deltaE94WithLab1:lab2:kL:k1:k2:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94(lab1:lab2:kL:k1:k2:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE76(lab1:lab2:)\/title","op":"replace","value":"deltaE76WithLab1:lab2:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE76(lab1:lab2:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"deltaE76WithLab1:lab2:"}],"op":"replace"},{"op":"replace","value":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)\/title"},{"value":[{"kind":"text","text":"+ "},{"text":"xyzToRgbWithXyzIn:refIn:rChrom:gChrom:bChrom:wChrom:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToRgb(xyzIn:refIn:rChrom:gChrom:bChrom:wChrom:)\/fragments"},{"op":"replace","value":"deltaE00WithLab1:lab2:kL:kC:kH:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:kL:kC:kH:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:kL:kC:kH:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"deltaE00WithLab1:lab2:kL:kC:kH:","kind":"identifier"}]},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToXyz(lab:xyzRef:)\/title","value":"labToXyzWithLab:xyzRef:","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToXyz(lab:xyzRef:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"labToXyzWithLab:xyzRef:"}],"op":"replace"},{"op":"replace","value":"xyzToSrgbWithXyzIn:refIn:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToSrgb(xyzIn:refIn:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToSrgb(xyzIn:refIn:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"xyzToSrgbWithXyzIn:refIn:","kind":"identifier"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:)\/title","value":"cmykToXyzWithCmykIn:refOut:bpc:"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"cmykToXyzWithCmykIn:refOut:bpc:","kind":"identifier"}]},{"value":"luvToLchWithLuvIn:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToLch(luvIn:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToLch(luvIn:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"luvToLchWithLuvIn:","kind":"identifier"}]},{"value":"lchToLuvWithLchIn:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLuv(lchIn:)\/title","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLuv(lchIn:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"lchToLuvWithLchIn:"}],"op":"replace"},{"value":"spectral10ToDensityWithLambda:reflectance:status:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToDensity(lambda:reflectance:status:)\/title"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToDensity(lambda:reflectance:status:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"spectral10ToDensityWithLambda:reflectance:status:"}],"op":"replace"},{"op":"replace","value":"sRgbToXyzWithSRgb:refOut:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1sRgbToXyz(sRgb:refOut:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1sRgbToXyz(sRgb:refOut:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"sRgbToXyzWithSRgb:refOut:","kind":"identifier"}]},{"value":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:","op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToXyz(lambda:reflectance:illuminant:observer:)\/title"},{"value":[{"kind":"text","text":"+ "},{"text":"spectral10ToXyzWithLambda:reflectance:illuminant:observer:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1spectral10ToXyz(lambda:reflectance:illuminant:observer:)\/fragments","op":"replace"},{"op":"replace","value":"deltaE00WithLab1:lab2:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/title"},{"value":[{"kind":"text","text":"+ "},{"text":"deltaE00WithLab1:lab2:","kind":"identifier"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE00(lab1:lab2:)\/fragments"},{"op":"replace","value":"clipXyzWithXyz:xyzRef:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1clipXyz(xyz:xyzRef:)\/title"},{"value":[{"text":"+ ","kind":"text"},{"text":"clipXyzWithXyz:xyzRef:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1clipXyz(xyz:xyzRef:)\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToLch(labIn:)\/title","value":"labToLchWithLabIn:"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"labToLchWithLabIn:"}],"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1labToLch(labIn:)\/fragments"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLab(lchIn:)\/title","value":"lchToLabWithLchIn:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1lchToLab(lchIn:)\/fragments","value":[{"text":"+ ","kind":"text"},{"kind":"identifier","text":"lchToLabWithLchIn:"}],"op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToXyz(luvIn:xyzRef:)\/title","value":"luvToXyzWithLuvIn:xyzRef:"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1luvToXyz(luvIn:xyzRef:)\/fragments","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"luvToXyzWithLuvIn:xyzRef:"}],"op":"replace"},{"op":"replace","value":"xyzToCmykWithXyzIn:xyzRef:bpc:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:)\/title"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToCmyk(xyzIn:xyzRef:bpc:)\/fragments","value":[{"text":"+ ","kind":"text"},{"text":"xyzToCmykWithXyzIn:xyzRef:bpc:","kind":"identifier"}]},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/title","value":"ColorUtils"},{"op":"replace","value":[{"kind":"identifier","text":"ColorUtils"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils\/navigatorTitle","value":[{"kind":"identifier","text":"ColorUtils"}],"op":"replace"},{"value":"xyzToLabWithXyz:xyzRef:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLab(xyz:xyzRef:)\/title","op":"replace"},{"value":[{"text":"+ ","kind":"text"},{"text":"xyzToLabWithXyz:xyzRef:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLab(xyz:xyzRef:)\/fragments","op":"replace"},{"op":"replace","value":"deltaE94GWithLab1:lab2:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94G(lab1:lab2:)\/title"},{"value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"deltaE94GWithLab1:lab2:"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1deltaE94G(lab1:lab2:)\/fragments","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)\/title","value":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:"},{"op":"replace","value":[{"text":"+ ","kind":"text"},{"text":"rgbToXyzWithRgbIn:rChrom:gChrom:bChrom:wChrom:refOut:","kind":"identifier"}],"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1rgbToXyz(rgbIn:rChrom:gChrom:bChrom:wChrom:refOut:)\/fragments"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)\/title","value":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:","op":"replace"},{"path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1cmykToXyz(cmykIn:refOut:bpc:m:input:clut:output:)\/fragments","op":"replace","value":[{"kind":"text","text":"+ "},{"kind":"identifier","text":"cmykToXyzWithCmykIn:refOut:bpc:m:input:clut:output:"}]},{"value":"xyzToLuvWithXyzIn:xyzRef:","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLuv(xyzIn:xyzRef:)\/title","op":"replace"},{"op":"replace","path":"\/references\/doc:~1~1com.nixsensor.universalsdk~1documentation~1NixUniversalSDK~1ColorUtils~1xyzToLuv(xyzIn:xyzRef:)\/fragments","value":[{"kind":"text","text":"+ "},{"text":"xyzToLuvWithXyzIn:xyzRef:","kind":"identifier"}]}],"traits":[{"interfaceLanguage":"occ"}]}]}